Only in ../../ns-3-dev/src/wifi/examples: ideal-wifi-manager-example.cc
Only in ../../ns-3-dev/src/wifi/examples: minstrel-ht-wifi-manager-example.cc
Only in ../../NS3-WiGig/src/wifi/examples: reference
Only in ../../ns-3-dev/src/wifi/examples: test-interference-helper.cc
Only in ../../NS3-WiGig/src/wifi/examples: wifi-bianchi.cc
Only in ../../NS3-WiGig/src/wifi/examples: wifi-manager-example.cc
diff ../../NS3-WiGig/src/wifi/examples/wifi-phy-configuration.cc ../../ns-3-dev/src/wifi/examples/wifi-phy-configuration.cc
20a21,26
> #include <string>
> #include "ns3/core-module.h"
> #include "ns3/config-store-module.h"
> #include "ns3/network-module.h"
> #include "ns3/wifi-module.h"
> 
26,37d31
< #include "ns3/log.h"
< #include "ns3/command-line.h"
< #include "ns3/config-store.h"
< #include "ns3/config.h"
< #include "ns3/boolean.h"
< #include "ns3/uinteger.h"
< #include "ns3/string.h"
< #include "ns3/ssid.h"
< #include "ns3/yans-wifi-phy.h"
< #include "ns3/yans-wifi-helper.h"
< #include "ns3/wifi-net-device.h"
< 
41a36
> 
65c60
<   CommandLine cmd (__FILE__);
---
>   CommandLine cmd;
101c96
<     {
---
>   {
118,119c113,114
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
129,130c124,125
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
140,141c135,136
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
151,152c146,147
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
162,163c157,158
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
173,174c168,169
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
184,185c179,180
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
195,196c190,191
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
207,208c202,203
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
218,220c213,215
<       phy.Set ("ChannelNumber", UintegerValue (44));
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       phy.Set ("ChannelNumber", UintegerValue(44));
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
231,233c226,228
<       phy.Set ("ChannelNumber", UintegerValue (44));
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       phy.Set ("ChannelNumber", UintegerValue(44));
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
236,237c231,232
<       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelNumber", UintegerValue (40));
<       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelNumber", UintegerValue (40));
---
>       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelNumber", UintegerValue(40));
>       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelNumber", UintegerValue(40));
248,249c243,244
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
252,254c247,249
<       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue (40));
<       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue (40));
<       // Although channel 44 is configured originally for 20 MHz, we
---
>       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue(40));
>       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue(40));
>       // Although channel 44 is configured originally for 20 MHz, we 
265,266c260,261
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
269,271c264,266
<       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue (40));
<       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue (40));
<       // Although channel 44 is configured originally for 20 MHz, we
---
>       Config::Set ("/NodeList/0/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue(40));
>       Config::Set ("/NodeList/1/DeviceList/*/$ns3::WifiNetDevice/Phy/$ns3::YansWifiPhy/ChannelWidth", UintegerValue(40));
>       // Although channel 44 is configured originally for 20 MHz, we 
284,285c279,280
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
325,326c320,321
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
353,354c348,349
<       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get (0));
<       apDevice = wifi.Install (phy, macAp, wifiApNode.Get (0));
---
>       staDevice = wifi.Install (phy, macSta, wifiStaNode.Get(0));
>       apDevice = wifi.Install (phy, macAp, wifiApNode.Get(0));
364c359
<       // We expect channel number to be 36
---
>       // We expect channel number to be 36 
370c365
<       // We expect channel number to be 40
---
>       // We expect channel number to be 40 
376c371
<       // We expect channel number to be 36
---
>       // We expect channel number to be 36 
382c377
<       // We expect channel number to be 0
---
>       // We expect channel number to be 0 
393c388
<     }
---
>   }
diff ../../NS3-WiGig/src/wifi/examples/wifi-phy-test.cc ../../ns-3-dev/src/wifi/examples/wifi-phy-test.cc
21,25c21
< #include "ns3/packet.h"
< #include "ns3/constant-position-mobility-model.h"
< #include "ns3/simulator.h"
< #include "ns3/command-line.h"
< #include "ns3/flow-id-tag.h"
---
> #include "ns3/wifi-net-device.h"
30,31c26,37
< #include "ns3/nist-error-rate-model.h"
< #include "ns3/wifi-psdu.h"
---
> #include "ns3/error-rate-model.h"
> #include "ns3/yans-error-rate-model.h"
> #include "ns3/ptr.h"
> #include "ns3/mobility-model.h"
> #include "ns3/constant-position-mobility-model.h"
> #include "ns3/vector.h"
> #include "ns3/packet.h"
> #include "ns3/simulator.h"
> #include "ns3/nstime.h"
> #include "ns3/command-line.h"
> #include "ns3/flow-id-tag.h"
> #include "ns3/wifi-tx-vector.h"
35d40
< /// PsrExperiment
39d43
<   /// Input structure
43,47c47,51
<     double distance; ///< distance
<     std::string txMode; ///< transmit mode
<     uint8_t txPowerLevel; ///< transmit power level
<     uint32_t packetSize; ///< packet size
<     uint32_t nPackets; ///< number of packets
---
>     double distance;
>     std::string txMode;
>     uint8_t txPowerLevel;
>     uint32_t packetSize;
>     uint32_t nPackets;
49d52
<   /// Output structure
52c55
<     uint32_t received; ///< received
---
>     uint32_t received;
56,60d58
<   /**
<    * Run function
<    * \param input the PSR experiment
<    * \returns the PSR experiment output
<    */
64d61
<   /// Send function
66,76c63,66
<   /**
<    * Send receive function
<    * \param psdu the PSDU
<    * \param snr the SNR
<    * \param txVector the wifi transmit vector
<    * \param statusPerMpdu reception status per MPDU
<    */
<   void Receive (Ptr<WifiPsdu> psdu, double snr, WifiTxVector txVector, std::vector<bool> statusPerMpdu);
<   Ptr<WifiPhy> m_tx; ///< transmit
<   struct Input m_input; ///< input
<   struct Output m_output; ///< output
---
>   void Receive (Ptr<Packet> p, double snr, WifiTxVector txVector, enum WifiPreamble preamble);
>   Ptr<WifiPhy> m_tx;
>   struct Input m_input;
>   struct Output m_output;
82c72
<   Ptr<WifiPsdu> psdu = Create<WifiPsdu> (Create<Packet> (m_input.packetSize), WifiMacHeader ());
---
>   Ptr<Packet> p = Create<Packet> (m_input.packetSize);
87,88c77
<   txVector.SetPreambleType (WIFI_PREAMBLE_LONG);
<   m_tx->Send (psdu, txVector);
---
>   m_tx->SendPacket (p, txVector, WIFI_PREAMBLE_LONG);
92c81
< PsrExperiment::Receive (Ptr<WifiPsdu> psdu, double snr, WifiTxVector txVector, std::vector<bool> statusPerMpdu)
---
> PsrExperiment::Receive (Ptr<Packet> p, double snr, WifiTxVector txVector, enum WifiPreamble preamble)
127c116
<   Ptr<ErrorRateModel> error = CreateObject<NistErrorRateModel> ();
---
>   Ptr<ErrorRateModel> error = CreateObject<YansErrorRateModel> ();
150c139
< /// CollisionExperiment
---
> 
154d142
<   /// Input structure
158,167c146,155
<     Time interval; ///< interval
<     double xA; ///< x A
<     double xB; ///< x B
<     std::string txModeA; ///< transmit mode A
<     std::string txModeB; ///< transmit mode B
<     uint8_t txPowerLevelA; ///< transmit power level A
<     uint8_t txPowerLevelB; ///< transmit power level B
<     uint32_t packetSizeA; ///< packet size A
<     uint32_t packetSizeB; ///< packet size B
<     uint32_t nPackets; ///< number of packets
---
>     Time interval;
>     double xA;
>     double xB;
>     std::string txModeA;
>     std::string txModeB;
>     uint8_t txPowerLevelA;
>     uint8_t txPowerLevelB;
>     uint32_t packetSizeA;
>     uint32_t packetSizeB;
>     uint32_t nPackets;
169d156
<   /// Output struture
172,173c159,160
<     uint32_t receivedA; ///< received A
<     uint32_t receivedB; ///< received B
---
>     uint32_t receivedA;
>     uint32_t receivedB;
177,181d163
<   /**
<    * Run function
<    * \param input the collision experiment data
<    * \returns the experiment output
<    */
184d165
<   /// Send A function
186d166
<   /// Send B function
188,201c168,174
<   /**
<    * Receive function
<    * \param psdu the PSDU
<    * \param snr the SNR
<    * \param txVector the wifi transmit vector
<    * \param statusPerMpdu reception status per MPDU
<    */
<   void Receive (Ptr<WifiPsdu> psdu, double snr, WifiTxVector txVector, std::vector<bool> statusPerMpdu);
<   Ptr<WifiPhy> m_txA; ///< transmit A
<   Ptr<WifiPhy> m_txB; ///< transmit B
<   uint32_t m_flowIdA; ///< flow ID A
<   uint32_t m_flowIdB; ///< flow ID B
<   struct Input m_input; ///< input
<   struct Output m_output; ///< output
---
>   void Receive (Ptr<Packet> p, double snr, WifiTxVector txVector, enum WifiPreamble preamble);
>   Ptr<WifiPhy> m_txA;
>   Ptr<WifiPhy> m_txB;
>   uint32_t m_flowIdA;
>   uint32_t m_flowIdB;
>   struct Input m_input;
>   struct Output m_output;
207,208c180,181
<   Ptr<WifiPsdu> psdu = Create<WifiPsdu> (Create<Packet> (m_input.packetSizeA), WifiMacHeader ());
<   (*psdu->begin ())->GetPacket ()->AddByteTag (FlowIdTag (m_flowIdA));
---
>   Ptr<Packet> p = Create<Packet> (m_input.packetSizeA);
>   p->AddByteTag (FlowIdTag (m_flowIdA));
212,213c185
<   txVector.SetPreambleType (WIFI_PREAMBLE_LONG);
<   m_txA->Send (psdu, txVector);
---
>   m_txA->SendPacket (p, txVector, WIFI_PREAMBLE_LONG);
219,220c191,192
<   Ptr<WifiPsdu> psdu = Create<WifiPsdu> (Create<Packet> (m_input.packetSizeB), WifiMacHeader ());
<   (*psdu->begin ())->GetPacket ()->AddByteTag (FlowIdTag (m_flowIdB));
---
>   Ptr<Packet> p = Create<Packet> (m_input.packetSizeB);
>   p->AddByteTag (FlowIdTag (m_flowIdB));
224,225c196
<   txVector.SetPreambleType (WIFI_PREAMBLE_LONG);
<   m_txB->Send (psdu, txVector);
---
>   m_txB->SendPacket (p, txVector, WIFI_PREAMBLE_LONG);
229c200
< CollisionExperiment::Receive (Ptr<WifiPsdu> psdu, double snr, WifiTxVector txVector, std::vector<bool> statusPerMpdu)
---
> CollisionExperiment::Receive (Ptr<Packet> p, double snr, WifiTxVector txVector, enum WifiPreamble preamble)
232c203
<   if ((*psdu->begin ())->GetPacket ()->FindFirstMatchingByteTag (tag))
---
>   if (p->FindFirstMatchingByteTag (tag))
288c259
<   Ptr<ErrorRateModel> error = CreateObject<NistErrorRateModel> ();
---
>   Ptr<ErrorRateModel> error = CreateObject<YansErrorRateModel> ();
326c297
<   CommandLine cmd (__FILE__);
---
>   CommandLine cmd;
353c324
<   CommandLine cmd (__FILE__);
---
>   CommandLine cmd;
406c377
<   CommandLine cmd (__FILE__);
---
>   CommandLine cmd;
443c414
<   CommandLine cmd (__FILE__);
---
>   CommandLine cmd;
Only in ../../NS3-WiGig/src/wifi/examples: wifi-test-interference-helper.cc
Only in ../../NS3-WiGig/src/wifi/examples: wifi-trans-example.cc
Only in ../../NS3-WiGig/src/wifi/examples: wifi-trans-example.sh
diff ../../NS3-WiGig/src/wifi/examples/wscript ../../ns-3-dev/src/wifi/examples/wscript
8c8
<         ['wifi'])
---
>         ['core', 'mobility', 'network', 'wifi'])
11,13c11,13
<     obj = bld.create_ns3_program('wifi-test-interference-helper',
<         ['wifi'])
<     obj.source = 'wifi-test-interference-helper.cc'
---
>     obj = bld.create_ns3_program('test-interference-helper',
>         ['core', 'mobility', 'network', 'wifi'])
>     obj.source = 'test-interference-helper.cc'
15,17c15,17
<     obj = bld.create_ns3_program('wifi-manager-example',
<         ['wifi'])
<     obj.source = 'wifi-manager-example.cc'
---
>     obj = bld.create_ns3_program('ideal-wifi-manager-example',
>         ['core', 'network', 'wifi', 'stats', 'mobility', 'propagation'])
>     obj.source = 'ideal-wifi-manager-example.cc'
19,21c19,21
<     obj = bld.create_ns3_program('wifi-trans-example',
<         ['wifi'])
<     obj.source = 'wifi-trans-example.cc'
---
>     obj = bld.create_ns3_program('minstrel-ht-wifi-manager-example',
>         ['core', 'network', 'wifi', 'stats', 'mobility', 'propagation'])
>     obj.source = 'minstrel-ht-wifi-manager-example.cc'
24c24
<         ['wifi', 'config-store'])
---
>         ['core', 'network', 'config-store', 'wifi'])
26,29d25
< 
<     obj = bld.create_ns3_program('wifi-bianchi',
<         ['wifi', 'applications', 'internet-apps' ])
<     obj.source = 'wifi-bianchi.cc'
\ No newline at end of file
