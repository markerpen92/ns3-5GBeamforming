diff ../../NS3-WiGig/src/applications/bindings/callbacks_list.py ../../ns-3-dev-git/src/applications/bindings/callbacks_list.py
10a11
>     ['unsigned char', 'ns3::Ptr<ns3::QueueItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'],
diff ../../NS3-WiGig/src/applications/bindings/modulegen__gcc_ILP32.py ../../ns-3-dev-git/src/applications/bindings/modulegen__gcc_ILP32.py
37,39c37,39
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator', 'ns3::ApplicationContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator*', 'ns3::ApplicationContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator&', 'ns3::ApplicationContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator', u'ns3::ApplicationContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator*', u'ns3::ApplicationContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator&', u'ns3::ApplicationContainer::Iterator&')
45c45
<     module.add_class('AsciiTraceHelperForDevice', import_from_module='ns.network', allow_subclassing=True)
---
>     module.add_class('AsciiTraceHelperForDevice', allow_subclassing=True, import_from_module='ns.network')
50,52c50,52
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator', 'ns3::AttributeConstructionList::CIterator')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator*', 'ns3::AttributeConstructionList::CIterator*')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator&', 'ns3::AttributeConstructionList::CIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator', u'ns3::AttributeConstructionList::CIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator*', u'ns3::AttributeConstructionList::CIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator&', u'ns3::AttributeConstructionList::CIterator&')
73,75c73,75
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator', 'ns3::ChannelList::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator*', 'ns3::ChannelList::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator&', 'ns3::ChannelList::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator', u'ns3::ChannelList::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator*', u'ns3::ChannelList::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator&', u'ns3::ChannelList::Iterator&')
77c77
<     module.add_class('DataOutputCallback', import_from_module='ns.stats', allow_subclassing=True)
---
>     module.add_class('DataOutputCallback', allow_subclassing=True, import_from_module='ns.stats')
140,142c140,142
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >', 'ns3::LogComponent::ComponentList')
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >*', 'ns3::LogComponent::ComponentList*')
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >&', 'ns3::LogComponent::ComponentList&')
---
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >', u'ns3::LogComponent::ComponentList')
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >*', u'ns3::LogComponent::ComponentList*')
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >&', u'ns3::LogComponent::ComponentList&')
149,151c149,151
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )', 'ns3::Mac48Address::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )*', 'ns3::Mac48Address::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )&', 'ns3::Mac48Address::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )', u'ns3::Mac48Address::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )*', u'ns3::Mac48Address::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )&', u'ns3::Mac48Address::TracedCallback&')
164,166c164,166
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator', 'ns3::NetDeviceContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator*', 'ns3::NetDeviceContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator&', 'ns3::NetDeviceContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator', u'ns3::NetDeviceContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator*', u'ns3::NetDeviceContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator&', u'ns3::NetDeviceContainer::Iterator&')
169,171c169,171
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeContainer::Iterator&')
174,176c174,176
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeList::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeList::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeList::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeList::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeList::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeList::Iterator&')
178c178
<     module.add_class('NonCopyable', import_from_module='ns.core', destructor_visibility='protected')
---
>     module.add_class('NonCopyable', destructor_visibility='protected', import_from_module='ns.core')
180c180
<     module.add_class('ObjectBase', import_from_module='ns.core', allow_subclassing=True)
---
>     module.add_class('ObjectBase', allow_subclassing=True, import_from_module='ns.core')
217,222c217,222
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator', 'ns3::PbbAddressTlvBlock::Iterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator*', 'ns3::PbbAddressTlvBlock::Iterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator&', 'ns3::PbbAddressTlvBlock::Iterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator', 'ns3::PbbAddressTlvBlock::ConstIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator*', 'ns3::PbbAddressTlvBlock::ConstIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator&', 'ns3::PbbAddressTlvBlock::ConstIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator', u'ns3::PbbAddressTlvBlock::Iterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator*', u'ns3::PbbAddressTlvBlock::Iterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator&', u'ns3::PbbAddressTlvBlock::Iterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator', u'ns3::PbbAddressTlvBlock::ConstIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator*', u'ns3::PbbAddressTlvBlock::ConstIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator&', u'ns3::PbbAddressTlvBlock::ConstIterator&')
225,230c225,230
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbTlvBlock::Iterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbTlvBlock::Iterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbTlvBlock::Iterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbTlvBlock::ConstIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbTlvBlock::ConstIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbTlvBlock::ConstIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbTlvBlock::Iterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbTlvBlock::Iterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbTlvBlock::Iterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbTlvBlock::ConstIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbTlvBlock::ConstIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbTlvBlock::ConstIterator&')
238c238
<     module.add_class('PcapHelperForDevice', import_from_module='ns.network', allow_subclassing=True)
---
>     module.add_class('PcapHelperForDevice', allow_subclassing=True, import_from_module='ns.network')
244c244
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::ObjectBase'], template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'], parent=root_module['ns3::ObjectBase'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
246c246
<     module.add_class('Simulator', import_from_module='ns.core', destructor_visibility='private')
---
>     module.add_class('Simulator', destructor_visibility='private', import_from_module='ns.core')
250c250
<     module.add_class('StatisticalSummary', import_from_module='ns.stats', allow_subclassing=True)
---
>     module.add_class('StatisticalSummary', allow_subclassing=True, import_from_module='ns.stats')
275,277c275,277
<     typehandlers.add_type_alias('uint32_t', 'ns3::TypeId::hash_t')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::TypeId::hash_t*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::TypeId::hash_t&')
---
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::TypeId::hash_t')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::TypeId::hash_t*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::TypeId::hash_t&')
310,312c310,312
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )', 'ns3::PacketBurst::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )*', 'ns3::PacketBurst::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )&', 'ns3::PacketBurst::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )', u'ns3::PacketBurst::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )*', u'ns3::PacketBurst::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )&', u'ns3::PacketBurst::TracedCallback&')
352c352
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
354c354
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
356c356
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
358c358
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
360c360
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
362c362
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
364c364
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NetDeviceQueue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NetDeviceQueue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NetDeviceQueue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NetDeviceQueue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
366c366
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
368c368
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
370c370
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
372c372
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbAddressBlock', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbAddressBlock>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbAddressBlock', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbAddressBlock>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
374c374
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbMessage', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbMessage>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbMessage', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbMessage>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
376c376
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::Header'], template_parameters=['ns3::PbbPacket', 'ns3::Header', 'ns3::DefaultDeleter<ns3::PbbPacket>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbPacket', 'ns3::Header', 'ns3::DefaultDeleter<ns3::PbbPacket>'], parent=root_module['ns3::Header'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
378c378
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbTlv', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbTlv>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbTlv', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbTlv>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
380c380
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
382c382
<     module.add_class('SimpleRefCount', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::ThreeGppHttpServerTxBuffer', 'ns3::empty', 'ns3::DefaultDeleter<ns3::ThreeGppHttpServerTxBuffer>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, template_parameters=['ns3::ThreeGppHttpServerTxBuffer', 'ns3::empty', 'ns3::DefaultDeleter<ns3::ThreeGppHttpServerTxBuffer>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
384c384
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
425,427c425,427
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )', 'ns3::Time::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )*', 'ns3::Time::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )&', 'ns3::Time::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )', u'ns3::Time::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )*', u'ns3::Time::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )&', u'ns3::Time::TracedCallback&')
446,451c446,451
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )', 'ns3::Application::DelayAddressCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )*', 'ns3::Application::DelayAddressCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )&', 'ns3::Application::DelayAddressCallback&')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )', 'ns3::Application::StateTransitionCallback')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )*', 'ns3::Application::StateTransitionCallback*')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )&', 'ns3::Application::StateTransitionCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )', u'ns3::Application::DelayAddressCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )*', u'ns3::Application::DelayAddressCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )&', u'ns3::Application::DelayAddressCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )', u'ns3::Application::StateTransitionCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )*', u'ns3::Application::StateTransitionCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )&', u'ns3::Application::StateTransitionCallback&')
455c455
<     module.add_class('AttributeChecker', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
---
>     module.add_class('AttributeChecker', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
457c457
<     module.add_class('AttributeValue', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
---
>     module.add_class('AttributeValue', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
551c551
<     module.add_class('MinMaxAvgTotalCalculator', import_from_module='ns.stats', parent=[root_module['ns3::DataCalculator'], root_module['ns3::StatisticalSummary']], template_parameters=['unsigned int'])
---
>     module.add_class('MinMaxAvgTotalCalculator', import_from_module='ns.stats', template_parameters=['unsigned int'], parent=[root_module['ns3::DataCalculator'], root_module['ns3::StatisticalSummary']])
556,564c556,564
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::NetDevice::LinkChangeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::NetDevice::LinkChangeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::NetDevice::LinkChangeTracedCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::ReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::ReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::ReceiveCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::PromiscReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::PromiscReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::PromiscReceiveCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::NetDevice::LinkChangeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::NetDevice::LinkChangeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::NetDevice::LinkChangeTracedCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::ReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::ReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::ReceiveCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::PromiscReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::PromiscReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::PromiscReceiveCallback&')
567,569c567,569
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDeviceQueue::WakeCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDeviceQueue::WakeCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDeviceQueue::WakeCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDeviceQueue::WakeCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDeviceQueue::WakeCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDeviceQueue::WakeCallback&')
572,574c572,574
<     typehandlers.add_type_alias('std::function< unsigned long long ( ns3::Ptr< ns3::QueueItem > ) >', 'ns3::NetDeviceQueueInterface::SelectQueueCallback')
<     typehandlers.add_type_alias('std::function< unsigned long long ( ns3::Ptr< ns3::QueueItem > ) >*', 'ns3::NetDeviceQueueInterface::SelectQueueCallback*')
<     typehandlers.add_type_alias('std::function< unsigned long long ( ns3::Ptr< ns3::QueueItem > ) >&', 'ns3::NetDeviceQueueInterface::SelectQueueCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDeviceQueueInterface::SelectQueueCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDeviceQueueInterface::SelectQueueCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDeviceQueueInterface::SelectQueueCallback&')
579,584c579,584
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::ProtocolHandler')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::ProtocolHandler*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::ProtocolHandler&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::DeviceAdditionListener')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::DeviceAdditionListener*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::DeviceAdditionListener&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::ProtocolHandler')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::ProtocolHandler*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::ProtocolHandler&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::DeviceAdditionListener')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::DeviceAdditionListener*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::DeviceAdditionListener&')
597,614c597,614
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )', 'ns3::Packet::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )*', 'ns3::Packet::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )&', 'ns3::Packet::TracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', 'ns3::Packet::AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', 'ns3::Packet::AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', 'ns3::Packet::AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', 'ns3::Packet::TwoAddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', 'ns3::Packet::TwoAddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', 'ns3::Packet::TwoAddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', 'ns3::Packet::Mac48AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', 'ns3::Packet::Mac48AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', 'ns3::Packet::Mac48AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::Packet::SizeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::Packet::SizeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::Packet::SizeTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', 'ns3::Packet::SinrTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', 'ns3::Packet::SinrTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', 'ns3::Packet::SinrTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )', u'ns3::Packet::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )*', u'ns3::Packet::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )&', u'ns3::Packet::TracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', u'ns3::Packet::AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', u'ns3::Packet::AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', u'ns3::Packet::AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', u'ns3::Packet::TwoAddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', u'ns3::Packet::TwoAddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', u'ns3::Packet::TwoAddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', u'ns3::Packet::Mac48AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', u'ns3::Packet::Mac48AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', u'ns3::Packet::Mac48AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::Packet::SizeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::Packet::SizeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::Packet::SizeTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', u'ns3::Packet::SinrTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', u'ns3::Packet::SinrTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', u'ns3::Packet::SinrTracedCallback&')
631,648c631,648
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator', 'ns3::PbbAddressBlock::AddressIterator')
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator*', 'ns3::PbbAddressBlock::AddressIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator&', 'ns3::PbbAddressBlock::AddressIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator', 'ns3::PbbAddressBlock::ConstAddressIterator')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator*', 'ns3::PbbAddressBlock::ConstAddressIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator&', 'ns3::PbbAddressBlock::ConstAddressIterator&')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator', 'ns3::PbbAddressBlock::PrefixIterator')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator*', 'ns3::PbbAddressBlock::PrefixIterator*')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator&', 'ns3::PbbAddressBlock::PrefixIterator&')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator', 'ns3::PbbAddressBlock::ConstPrefixIterator')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator*', 'ns3::PbbAddressBlock::ConstPrefixIterator*')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator&', 'ns3::PbbAddressBlock::ConstPrefixIterator&')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator', 'ns3::PbbAddressBlock::TlvIterator')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator*', 'ns3::PbbAddressBlock::TlvIterator*')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator&', 'ns3::PbbAddressBlock::TlvIterator&')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator', 'ns3::PbbAddressBlock::ConstTlvIterator')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator*', 'ns3::PbbAddressBlock::ConstTlvIterator*')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator&', 'ns3::PbbAddressBlock::ConstTlvIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator', u'ns3::PbbAddressBlock::AddressIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator*', u'ns3::PbbAddressBlock::AddressIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator&', u'ns3::PbbAddressBlock::AddressIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator', u'ns3::PbbAddressBlock::ConstAddressIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator*', u'ns3::PbbAddressBlock::ConstAddressIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator&', u'ns3::PbbAddressBlock::ConstAddressIterator&')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator', u'ns3::PbbAddressBlock::PrefixIterator')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator*', u'ns3::PbbAddressBlock::PrefixIterator*')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator&', u'ns3::PbbAddressBlock::PrefixIterator&')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator', u'ns3::PbbAddressBlock::ConstPrefixIterator')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator*', u'ns3::PbbAddressBlock::ConstPrefixIterator*')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator&', u'ns3::PbbAddressBlock::ConstPrefixIterator&')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator', u'ns3::PbbAddressBlock::TlvIterator')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator*', u'ns3::PbbAddressBlock::TlvIterator*')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator&', u'ns3::PbbAddressBlock::TlvIterator&')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator', u'ns3::PbbAddressBlock::ConstTlvIterator')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator*', u'ns3::PbbAddressBlock::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator&', u'ns3::PbbAddressBlock::ConstTlvIterator&')
655,666c655,666
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbMessage::TlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbMessage::TlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbMessage::TlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbMessage::ConstTlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbMessage::ConstTlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbMessage::ConstTlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator', 'ns3::PbbMessage::AddressBlockIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator*', 'ns3::PbbMessage::AddressBlockIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator&', 'ns3::PbbMessage::AddressBlockIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator', 'ns3::PbbMessage::ConstAddressBlockIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator*', 'ns3::PbbMessage::ConstAddressBlockIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator&', 'ns3::PbbMessage::ConstAddressBlockIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbMessage::TlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbMessage::TlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbMessage::TlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbMessage::ConstTlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbMessage::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbMessage::ConstTlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator', u'ns3::PbbMessage::AddressBlockIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator*', u'ns3::PbbMessage::AddressBlockIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator&', u'ns3::PbbMessage::AddressBlockIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator', u'ns3::PbbMessage::ConstAddressBlockIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator*', u'ns3::PbbMessage::ConstAddressBlockIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator&', u'ns3::PbbMessage::ConstAddressBlockIterator&')
673,684c673,684
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbPacket::TlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbPacket::TlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbPacket::TlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbPacket::ConstTlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbPacket::ConstTlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbPacket::ConstTlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator', 'ns3::PbbPacket::MessageIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator*', 'ns3::PbbPacket::MessageIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator&', 'ns3::PbbPacket::MessageIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator', 'ns3::PbbPacket::ConstMessageIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator*', 'ns3::PbbPacket::ConstMessageIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator&', 'ns3::PbbPacket::ConstMessageIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbPacket::TlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbPacket::TlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbPacket::TlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbPacket::ConstTlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbPacket::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbPacket::ConstTlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator', u'ns3::PbbPacket::MessageIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator*', u'ns3::PbbPacket::MessageIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator&', u'ns3::PbbPacket::MessageIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator', u'ns3::PbbPacket::ConstMessageIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator*', u'ns3::PbbPacket::ConstMessageIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator&', u'ns3::PbbPacket::ConstMessageIterator&')
689,699c689,692
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet> [class]
<     module.add_class('Queue', import_from_module='ns.network', parent=root_module['ns3::QueueBase'], template_parameters=['ns3::Packet'])
<     typehandlers.add_type_alias('ns3::Packet', 'ns3::Queue< ns3::Packet > ItemType')
<     typehandlers.add_type_alias('ns3::Packet*', 'ns3::Queue< ns3::Packet > ItemType*')
<     typehandlers.add_type_alias('ns3::Packet&', 'ns3::Queue< ns3::Packet > ItemType&')
<     module.add_typedef(root_module['ns3::Packet'], 'ItemType')
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem> [class]
<     module.add_class('Queue', import_from_module='ns.network', parent=root_module['ns3::QueueBase'], template_parameters=['ns3::QueueDiscItem'])
<     typehandlers.add_type_alias('ns3::QueueDiscItem', 'ns3::Queue< ns3::QueueDiscItem > ItemType')
<     typehandlers.add_type_alias('ns3::QueueDiscItem*', 'ns3::Queue< ns3::QueueDiscItem > ItemType*')
<     typehandlers.add_type_alias('ns3::QueueDiscItem&', 'ns3::Queue< ns3::QueueDiscItem > ItemType&')
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::Packet> [class]
>     module.add_class('Queue', import_from_module='ns.network', template_parameters=['ns3::Packet'], parent=root_module['ns3::QueueBase'])
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::QueueDiscItem> [class]
>     module.add_class('Queue', import_from_module='ns.network', template_parameters=['ns3::QueueDiscItem'], parent=root_module['ns3::QueueBase'])
704,706c697,699
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', 'ns3::QueueItem::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', 'ns3::QueueItem::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', 'ns3::QueueItem::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', u'ns3::QueueItem::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', u'ns3::QueueItem::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', u'ns3::QueueItem::TracedCallback&')
725,727c718,720
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )', 'ns3::ThreeGppHttpClient::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )*', 'ns3::ThreeGppHttpClient::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )&', 'ns3::ThreeGppHttpClient::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )', u'ns3::ThreeGppHttpClient::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )*', u'ns3::ThreeGppHttpClient::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )&', u'ns3::ThreeGppHttpClient::TracedCallback&')
732,737c725,730
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )*', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )&', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )*', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )&', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )*', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )&', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )*', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )&', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback&')
767c760
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
769c762
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
771c764
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
773c766,768
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty> [class]
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['unsigned char', 'ns3::Ptr<ns3::QueueItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
775c770
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Time &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Time &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
777c772
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const std::basic_string<char> &', 'const std::basic_string<char> &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const std::basic_string<char> &', 'const std::basic_string<char> &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
779c774
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
781c776
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
783c778
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
785c780
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::QueueDiscItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::QueueDiscItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
787c782
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
789c784
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
791c786
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpServer>', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpServer>', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
793c788
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
795c790
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
797c792
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
799c794
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
801c796
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
803c798
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
805c800
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
807c802
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'unsigned int', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'unsigned int', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
809,813c804
<     module.add_class('CounterCalculator', import_from_module='ns.stats', parent=root_module['ns3::DataCalculator'], template_parameters=['unsigned int'])
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet> [class]
<     module.add_class('DropTailQueue', import_from_module='ns.network', parent=root_module['ns3::Queue< ns3::Packet >'], template_parameters=['ns3::Packet'])
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem> [class]
<     module.add_class('DropTailQueue', import_from_module='ns.network', parent=root_module['ns3::Queue< ns3::QueueDiscItem >'], template_parameters=['ns3::QueueDiscItem'])
---
>     module.add_class('CounterCalculator', import_from_module='ns.stats', template_parameters=['unsigned int'], parent=root_module['ns3::DataCalculator'])
824,858c815,849
<     module.add_container('std::map< std::string, ns3::LogComponent * >', ('std::string', 'ns3::LogComponent *'), container_type='map')
<     module.add_container('std::list< ns3::Ptr< ns3::Packet > >', 'ns3::Ptr< ns3::Packet >', container_type='list')
<     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type='vector')
<     module.add_container('std::list< unsigned int >', 'unsigned int', container_type='list')
<     module.add_container('std::list< ns3::Ptr< ns3::Socket > >', 'ns3::Ptr< ns3::Socket >', container_type='list')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >', 'ns3::SequenceNumber32')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >*', 'ns3::SequenceNumber32*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >&', 'ns3::SequenceNumber32&')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >', 'ns3::SequenceNumber16')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >*', 'ns3::SequenceNumber16*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >&', 'ns3::SequenceNumber16&')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >', 'ns3::SequenceNumber8')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >*', 'ns3::SequenceNumber8*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >&', 'ns3::SequenceNumber8&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyTxStartCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyTxStartCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyTxStartCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyTxEndCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyTxEndCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyTxEndCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxStartCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxStartCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxStartCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxEndErrorCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxEndErrorCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxEndErrorCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxEndOkCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxEndOkCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxEndOkCallback&')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )', 'ns3::TimePrinter')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )*', 'ns3::TimePrinter*')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )&', 'ns3::TimePrinter&')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )', 'ns3::NodePrinter')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )*', 'ns3::NodePrinter*')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )&', 'ns3::NodePrinter&')
---
>     module.add_container('std::map< std::string, ns3::LogComponent * >', ('std::string', 'ns3::LogComponent *'), container_type=u'map')
>     module.add_container('std::list< ns3::Ptr< ns3::Packet > >', 'ns3::Ptr< ns3::Packet >', container_type=u'list')
>     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type=u'vector')
>     module.add_container('std::list< unsigned int >', 'unsigned int', container_type=u'list')
>     module.add_container('std::list< ns3::Ptr< ns3::Socket > >', 'ns3::Ptr< ns3::Socket >', container_type=u'list')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >', u'ns3::SequenceNumber32')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >*', u'ns3::SequenceNumber32*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >&', u'ns3::SequenceNumber32&')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >', u'ns3::SequenceNumber16')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >*', u'ns3::SequenceNumber16*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >&', u'ns3::SequenceNumber16&')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >', u'ns3::SequenceNumber8')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >*', u'ns3::SequenceNumber8*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >&', u'ns3::SequenceNumber8&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyTxStartCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyTxStartCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyTxStartCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyTxEndCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyTxEndCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyTxEndCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxStartCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxStartCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxStartCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxEndErrorCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxEndErrorCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxEndErrorCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxEndOkCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxEndOkCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxEndOkCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )', u'ns3::LogTimePrinter')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )*', u'ns3::LogTimePrinter*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )&', u'ns3::LogTimePrinter&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )', u'ns3::LogNodePrinter')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )*', u'ns3::LogNodePrinter*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )&', u'ns3::LogNodePrinter&')
905,910c896,901
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash32Function_ptr')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash32Function_ptr*')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash32Function_ptr&')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash64Function_ptr')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash64Function_ptr*')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash64Function_ptr&')
---
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash32Function_ptr')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash32Function_ptr*')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash32Function_ptr&')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash64Function_ptr')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash64Function_ptr*')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash64Function_ptr&')
933,965c924,956
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )', 'ns3::TracedValueCallback::Time')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )*', 'ns3::TracedValueCallback::Time*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )&', 'ns3::TracedValueCallback::Time&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )', 'ns3::TracedValueCallback::SequenceNumber32')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )*', 'ns3::TracedValueCallback::SequenceNumber32*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )&', 'ns3::TracedValueCallback::SequenceNumber32&')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )', 'ns3::TracedValueCallback::Bool')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )*', 'ns3::TracedValueCallback::Bool*')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )&', 'ns3::TracedValueCallback::Bool&')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )', 'ns3::TracedValueCallback::Int8')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )*', 'ns3::TracedValueCallback::Int8*')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )&', 'ns3::TracedValueCallback::Int8&')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )', 'ns3::TracedValueCallback::Uint8')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )*', 'ns3::TracedValueCallback::Uint8*')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )&', 'ns3::TracedValueCallback::Uint8&')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )', 'ns3::TracedValueCallback::Int16')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )*', 'ns3::TracedValueCallback::Int16*')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )&', 'ns3::TracedValueCallback::Int16&')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )', 'ns3::TracedValueCallback::Uint16')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )*', 'ns3::TracedValueCallback::Uint16*')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )&', 'ns3::TracedValueCallback::Uint16&')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )', 'ns3::TracedValueCallback::Int32')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )*', 'ns3::TracedValueCallback::Int32*')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )&', 'ns3::TracedValueCallback::Int32&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::TracedValueCallback::Uint32')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::TracedValueCallback::Uint32*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::TracedValueCallback::Uint32&')
<     typehandlers.add_type_alias('void ( * ) ( double, double )', 'ns3::TracedValueCallback::Double')
<     typehandlers.add_type_alias('void ( * ) ( double, double )*', 'ns3::TracedValueCallback::Double*')
<     typehandlers.add_type_alias('void ( * ) ( double, double )&', 'ns3::TracedValueCallback::Double&')
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::TracedValueCallback::Void')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::TracedValueCallback::Void*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::TracedValueCallback::Void&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )', u'ns3::TracedValueCallback::Time')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )*', u'ns3::TracedValueCallback::Time*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )&', u'ns3::TracedValueCallback::Time&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )', u'ns3::TracedValueCallback::SequenceNumber32')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )*', u'ns3::TracedValueCallback::SequenceNumber32*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )&', u'ns3::TracedValueCallback::SequenceNumber32&')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )', u'ns3::TracedValueCallback::Bool')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )*', u'ns3::TracedValueCallback::Bool*')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )&', u'ns3::TracedValueCallback::Bool&')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )', u'ns3::TracedValueCallback::Int8')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )*', u'ns3::TracedValueCallback::Int8*')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )&', u'ns3::TracedValueCallback::Int8&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )', u'ns3::TracedValueCallback::Uint8')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )*', u'ns3::TracedValueCallback::Uint8*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )&', u'ns3::TracedValueCallback::Uint8&')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )', u'ns3::TracedValueCallback::Int16')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )*', u'ns3::TracedValueCallback::Int16*')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )&', u'ns3::TracedValueCallback::Int16&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )', u'ns3::TracedValueCallback::Uint16')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )*', u'ns3::TracedValueCallback::Uint16*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )&', u'ns3::TracedValueCallback::Uint16&')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )', u'ns3::TracedValueCallback::Int32')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )*', u'ns3::TracedValueCallback::Int32*')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )&', u'ns3::TracedValueCallback::Int32&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::TracedValueCallback::Uint32')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::TracedValueCallback::Uint32*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::TracedValueCallback::Uint32&')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )', u'ns3::TracedValueCallback::Double')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )*', u'ns3::TracedValueCallback::Double*')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )&', u'ns3::TracedValueCallback::Double&')
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::TracedValueCallback::Void')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::TracedValueCallback::Void*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::TracedValueCallback::Void&')
1235a1227
>     register_Ns3CallbackImpl__Unsigned_char_Ns3Ptr__lt__ns3QueueItem__gt___Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_methods(root_module, root_module['ns3::CallbackImpl< unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'])
1254,1255d1245
<     register_Ns3DropTailQueue__Ns3Packet_methods(root_module, root_module['ns3::DropTailQueue< ns3::Packet >'])
<     register_Ns3DropTailQueue__Ns3QueueDiscItem_methods(root_module, root_module['ns3::DropTailQueue< ns3::QueueDiscItem >'])
1541c1531
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2016c2006
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2021c2011
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2026c2016
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2031c2021
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2036c2026
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2041c2031
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2074c2064
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
2542c2532
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2634c2624
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2666c2656
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) const [member function]
---
>     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) [member function]
2669,2670c2659
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
---
>                    [param('ns3::Ipv6Prefix const &', 'prefix')])
2726,2730d2714
<     ## ipv6-address.h (module 'network'): bool ns3::Ipv6Address::HasPrefix(ns3::Ipv6Prefix const & prefix) const [member function]
<     cls.add_method('HasPrefix', 
<                    'bool', 
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
2735c2719
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
2760c2744
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2796,2800d2779
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredAddress(ns3::Address addr, ns3::Ipv6Address prefix) [member function]
<     cls.add_method('MakeAutoconfiguredAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'addr'), param('ns3::Ipv6Address', 'prefix')], 
<                    is_static=True)
2821,2825d2799
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredLinkLocalAddress(ns3::Address mac) [member function]
<     cls.add_method('MakeAutoconfiguredLinkLocalAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'mac')], 
<                    is_static=True)
2886,2889d2859
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(uint8_t * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('uint8_t *', 'prefix'), param('uint8_t', 'prefixLength')])
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(char const * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('char const *', 'prefix'), param('uint8_t', 'prefixLength')])
2906,2910d2875
<     ## ipv6-address.h (module 'network'): uint8_t ns3::Ipv6Prefix::GetMinimumPrefixLength() const [member function]
<     cls.add_method('GetMinimumPrefixLength', 
<                    'uint8_t', 
<                    [], 
<                    is_const=True)
2930c2895
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2941,2944d2905
<     ## ipv6-address.h (module 'network'): void ns3::Ipv6Prefix::SetPrefixLength(uint8_t prefixLength) [member function]
<     cls.add_method('SetPrefixLength', 
<                    'void', 
<                    [param('uint8_t', 'prefixLength')])
3026,3040d2986
<     ## mac16-address.h (module 'network'): static ns3::Mac16Address ns3::Mac16Address::GetBroadcast() [member function]
<     cls.add_method('GetBroadcast', 
<                    'ns3::Mac16Address', 
<                    [], 
<                    is_static=True)
<     ## mac16-address.h (module 'network'): static ns3::Mac16Address ns3::Mac16Address::GetMulticast(ns3::Ipv6Address address) [member function]
<     cls.add_method('GetMulticast', 
<                    'ns3::Mac16Address', 
<                    [param('ns3::Ipv6Address', 'address')], 
<                    is_static=True)
<     ## mac16-address.h (module 'network'): bool ns3::Mac16Address::IsBroadcast() const [member function]
<     cls.add_method('IsBroadcast', 
<                    'bool', 
<                    [], 
<                    is_const=True)
3046,3050d2991
<     ## mac16-address.h (module 'network'): bool ns3::Mac16Address::IsMulticast() const [member function]
<     cls.add_method('IsMulticast', 
<                    'bool', 
<                    [], 
<                    is_const=True)
3375c3316
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3414c3355
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3447,3451d3387
<     ## object-factory.h (module 'core'): bool ns3::ObjectFactory::IsTypeIdSet() const [member function]
<     cls.add_method('IsTypeIdSet', 
<                    'bool', 
<                    [], 
<                    is_const=True)
4182c4118
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4290,4294d4225
<     ## simulator.h (module 'core'): static uint64_t ns3::Simulator::GetEventCount() [member function]
<     cls.add_method('GetEventCount', 
<                    'uint64_t', 
<                    [], 
<                    is_static=True)
4361c4292
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4366c4297
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4371c4302
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4376c4307
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4381c4312
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4386c4317
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4391c4322
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4396c4327
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4438c4369
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4443c4374
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4453c4384
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4458c4389
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4790c4721
<                    template_parameters=['ns3::QueueBase'])
---
>                    template_parameters=[u'ns3::QueueBase'])
4795c4726
<                    template_parameters=['ns3::Object'])
---
>                    template_parameters=[u'ns3::Object'])
4982,4986c4913,4916
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::int64x64_t'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
4994,4997c4924,4927
<     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', u'right'))
5058c4988
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5073c5003
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5185c5115
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5190c5120
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5200c5130
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5205c5135
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5273a5204,5208
>     ## object.h (module 'core'): ns3::Ptr<ns3::NetDevice> ns3::Object::GetObject() const [member function]
>     cls.add_method('GetObject', 
>                    'ns3::Ptr< ns3::NetDevice >', 
>                    [], 
>                    is_const=True, template_parameters=[u'ns3::NetDevice'])
5295c5230
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5300c5235
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5305c5240
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5372c5307
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5609c5544
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5614c5549
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5624c5559
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5629c5564
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5739c5674
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5744c5679
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6026c5961
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6031c5966
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6036c5971
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6046c5981
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6051c5986
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6061c5996
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6070c6005
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6095c6030
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6100c6035
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6110c6045
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6115c6050
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6120c6055
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6125c6060
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6180c6115
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6185c6120
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6198c6133
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6211c6146
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6224c6159
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6237c6172
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6304c6239
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6309c6244
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6314c6249
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6386c6321
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6923c6858
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6933,6941c6868,6873
<     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', u'right'))
7136c7068
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7141c7073
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7146c7078
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7151c7083
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7164c7096
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7174c7106
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7184c7116
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7189c7121
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7418c7350
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7423c7355
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7428c7360
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7433c7365
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7445c7377
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7450c7382
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7455c7387
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7460c7392
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7472c7404
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7477c7409
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7482c7414
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7492c7424
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7497c7429
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7502c7434
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7514c7446
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7519c7451
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7524c7456
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7591c7523
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7596c7528
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7601c7533
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7620c7552
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7625c7557
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7635c7567,7577
<                    is_static=True, template_parameters=['ns3::ObjectBase*'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::ObjectBase*'])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImplBase::GetCppTypeid() [member function]
>     cls.add_method('GetCppTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True, visibility='protected', template_parameters=[u'void'])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImplBase::GetCppTypeid() [member function]
>     cls.add_method('GetCppTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned int'])
7640c7582
<                    is_static=True, template_parameters=['void'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::NetDevice> '])
7645c7587
<                    is_static=True, template_parameters=['unsigned int'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Packet const> '])
7650c7592
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::NetDevice> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned short'])
7655c7597
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Packet const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Address const&'])
7660c7602
<                    is_static=True, template_parameters=['unsigned short'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::NetDevice::PacketType'])
7665c7607
<                    is_static=True, template_parameters=['ns3::Address const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::QueueDiscItem const> '])
7670c7612
<                    is_static=True, template_parameters=['ns3::NetDevice::PacketType'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned char'])
7675c7617
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::QueueDiscItem const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::QueueItem> '])
7680c7622
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Socket> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Socket> '])
7685c7627
<                    is_static=True, template_parameters=['bool'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'bool'])
7690c7632
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::ThreeGppHttpClient const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::ThreeGppHttpClient const> '])
7695c7637
<                    is_static=True, template_parameters=['ns3::Time const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Time const&'])
7700c7642
<                    is_static=True, template_parameters=['std::__cxx11::basic_string<char', ' std::char_traits<char>', ' std::allocator<char> > const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'std::__cxx11::basic_string<char', u' std::char_traits<char>', u' std::allocator<char> > const&'])
7705c7647
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::ThreeGppHttpServer const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::ThreeGppHttpServer const> '])
7745c7687
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7755c7697
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7833c7775
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7856c7798
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7912c7854
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7921c7863
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
8079c8021
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8084c8026
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8160c8102
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
8165c8107
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8170c8112
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
8324c8266
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
8329c8271
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
8502c8444
<                    is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, visibility='protected', is_virtual=True)
8797c8739
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8802c8744
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9030c8972
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9042c8984
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9047c8989
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9052c8994
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9057c8999
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9062c9004
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9067c9009
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9072c9014
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9077c9019
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9082c9024
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9092c9034
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9097c9039
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9102c9044
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9107c9049
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9112c9054
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9117c9059
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9122c9064
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9127c9069
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9132c9074
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9137c9079
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9142c9084
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9147c9089
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9152c9094
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9157c9099
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9162c9104
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9165a9108,9109
>     ## net-device-queue-interface.h (module 'network'): ns3::NetDeviceQueue::NetDeviceQueue(ns3::NetDeviceQueue const & arg0) [constructor]
>     cls.add_constructor([param('ns3::NetDeviceQueue const &', 'arg0')])
9168,9182c9112,9115
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Start() [member function]
<     cls.add_method('Start', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Stop() [member function]
<     cls.add_method('Stop', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Wake() [member function]
<     cls.add_method('Wake', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::QueueLimits> ns3::NetDeviceQueue::GetQueueLimits() [member function]
>     cls.add_method('GetQueueLimits', 
>                    'ns3::Ptr< ns3::QueueLimits >', 
>                    [])
9188,9196d9120
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::NotifyAggregatedObject(ns3::Ptr<ns3::NetDeviceQueueInterface> ndqi) [member function]
<     cls.add_method('NotifyAggregatedObject', 
<                    'void', 
<                    [param('ns3::Ptr< ns3::NetDeviceQueueInterface >', 'ndqi')])
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::SetWakeCallback(ns3::NetDeviceQueue::WakeCallback cb) [member function]
<     cls.add_method('SetWakeCallback', 
<                    'void', 
<                    [param('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')], 
<                    is_virtual=True)
9213,9218c9137,9156
<     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::QueueLimits> ns3::NetDeviceQueue::GetQueueLimits() [member function]
<     cls.add_method('GetQueueLimits', 
<                    'ns3::Ptr< ns3::QueueLimits >', 
<                    [])
<     ## net-device-queue-interface.h (module 'network'): ns3::NetDeviceQueue::NetDeviceQueue(ns3::NetDeviceQueue const & arg0) [constructor]
<     cls.add_constructor([param('ns3::NetDeviceQueue const &', 'arg0')])
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::SetWakeCallback(ns3::NetDeviceQueue::WakeCallback cb) [member function]
>     cls.add_method('SetWakeCallback', 
>                    'void', 
>                    [param('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Start() [member function]
>     cls.add_method('Start', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Stop() [member function]
>     cls.add_method('Stop', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Wake() [member function]
>     cls.add_method('Wake', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
9226c9164,9173
<     ## net-device-queue-interface.h (module 'network'): std::size_t ns3::NetDeviceQueueInterface::GetNTxQueues() const [member function]
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::CreateTxQueues() [member function]
>     cls.add_method('CreateTxQueues', 
>                    'void', 
>                    [])
>     ## net-device-queue-interface.h (module 'network'): bool ns3::NetDeviceQueueInterface::GetLateTxQueuesCreation() const [member function]
>     cls.add_method('GetLateTxQueuesCreation', 
>                    'bool', 
>                    [], 
>                    is_const=True)
>     ## net-device-queue-interface.h (module 'network'): uint8_t ns3::NetDeviceQueueInterface::GetNTxQueues() const [member function]
9228c9175
<                    'std::size_t', 
---
>                    'uint8_t', 
9236c9183
<     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::NetDeviceQueue> ns3::NetDeviceQueueInterface::GetTxQueue(std::size_t i) const [member function]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::NetDeviceQueue> ns3::NetDeviceQueueInterface::GetTxQueue(uint8_t i) const [member function]
9239c9186
<                    [param('std::size_t', 'i')], 
---
>                    [param('uint8_t', 'i')], 
9246,9247c9193,9194
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetNTxQueues(std::size_t numTxQueues) [member function]
<     cls.add_method('SetNTxQueues', 
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetLateTxQueuesCreation(bool value) [member function]
>     cls.add_method('SetLateTxQueuesCreation', 
9249c9196
<                    [param('std::size_t', 'numTxQueues')])
---
>                    [param('bool', 'value')])
9253c9200,9204
<                    [param('std::function< unsigned long long ( ns3::Ptr< ns3::QueueItem > ) >', 'cb')])
---
>                    [param('ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')])
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetTxQueuesN(uint8_t numTxQueues) [member function]
>     cls.add_method('SetTxQueuesN', 
>                    'void', 
>                    [param('uint8_t', 'numTxQueues')])
9258,9263c9209
<                    is_virtual=True, visibility='protected')
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::NotifyNewAggregate() [member function]
<     cls.add_method('NotifyNewAggregate', 
<                    'void', 
<                    [], 
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9390c9336
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9395c9341
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9510c9456
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9515c9461
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9520c9466
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9557,9561d9502
<     ## packet.h (module 'network'): void ns3::Packet::AddByteTag(ns3::Tag const & tag, uint32_t start, uint32_t end) const [member function]
<     cls.add_method('AddByteTag', 
<                    'void', 
<                    [param('ns3::Tag const &', 'tag'), param('uint32_t', 'start'), param('uint32_t', 'end')], 
<                    is_const=True)
9764c9705
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9769c9710
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9774c9715
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9799c9740
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9925c9866
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9951c9892
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9956c9897
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9961c9902
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9999c9940
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
10004c9945
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
10009c9950
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
10024c9965
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
10313c10254
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10318c10259
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10323c10264
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10328c10269
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10340c10281
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10345c10286
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10350c10291
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10355c10296
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10367c10308
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10372c10313
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10377c10318
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10382c10323
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10638c10579
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10643c10584
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10648c10589
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10653c10594
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10658c10599
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10670c10611
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10675c10616
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10680c10621
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10685c10626
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10690c10631
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10702c10643
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10707c10648
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10712c10653
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10717c10658
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10722c10663
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
11054c10995
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11059c11000
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11084c11025
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11089c11030
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11094c11035
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11099c11040
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
11104c11045
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Queue(ns3::Queue<ns3::Packet> const & arg0) [constructor]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::Packet>::Queue(ns3::Queue<ns3::Packet> const & arg0) [constructor]
11106,11107c11047,11048
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::begin() const [member function]
<     cls.add_method('begin', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::Head() const [member function]
>     cls.add_method('Head', 
11111,11117c11052,11053
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Iterator ns3::Queue<ns3::Packet>::begin() [member function]
<     cls.add_method('begin', 
<                    'ns3::Queue< ns3::Packet > Iterator', 
<                    [], 
<                    visibility='protected')
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::end() const [member function]
<     cls.add_method('end', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::Tail() const [member function]
>     cls.add_method('Tail', 
11121,11125d11056
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Iterator ns3::Queue<ns3::Packet>::end() [member function]
<     cls.add_method('end', 
<                    'ns3::Queue< ns3::Packet > Iterator', 
<                    [], 
<                    visibility='protected')
11170c11101
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11175c11106
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11180c11111
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11185c11116
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
11190c11121
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Queue(ns3::Queue<ns3::QueueDiscItem> const & arg0) [constructor]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Queue(ns3::Queue<ns3::QueueDiscItem> const & arg0) [constructor]
11192,11193c11123,11124
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::begin() const [member function]
<     cls.add_method('begin', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::Head() const [member function]
>     cls.add_method('Head', 
11197,11203c11128,11129
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Iterator ns3::Queue<ns3::QueueDiscItem>::begin() [member function]
<     cls.add_method('begin', 
<                    'ns3::Queue< ns3::QueueDiscItem > Iterator', 
<                    [], 
<                    visibility='protected')
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::end() const [member function]
<     cls.add_method('end', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::Tail() const [member function]
>     cls.add_method('Tail', 
11207,11211d11132
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Iterator ns3::Queue<ns3::QueueDiscItem>::end() [member function]
<     cls.add_method('end', 
<                    'ns3::Queue< ns3::QueueDiscItem > Iterator', 
<                    [], 
<                    visibility='protected')
11350c11271
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11355c11276
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11360c11281
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11365c11286
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11370c11291
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11396c11317
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11401c11322
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11601c11522,11532
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
>     ## simple-net-device.h (module 'network'): void ns3::SimpleNetDevice::DoInitialize() [member function]
>     cls.add_method('DoInitialize', 
>                    'void', 
>                    [], 
>                    visibility='protected', is_virtual=True)
>     ## simple-net-device.h (module 'network'): void ns3::SimpleNetDevice::NotifyNewAggregate() [member function]
>     cls.add_method('NotifyNewAggregate', 
>                    'void', 
>                    [], 
>                    visibility='protected', is_virtual=True)
11638c11569
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11643c11574
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11648c11579
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11689c11620
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11694c11625
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11699c11630
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11797c11728
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11802c11733
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11807c11738
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11853c11784
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11858c11789
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11863c11794
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11880c11811
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11885c11816
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11890c11821
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11926c11857
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11931c11862
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11936c11867
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11979c11910
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11984c11915
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11989c11920
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12110c12041
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12115c12046
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12153c12084
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12158c12089
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12180c12111
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12202c12133
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12224c12155
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12246c12177,12199
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
>     return
> 
> def register_Ns3CallbackImpl__Unsigned_char_Ns3Ptr__lt__ns3QueueItem__gt___Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_methods(root_module, cls):
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::CallbackImpl() [constructor]
>     cls.add_constructor([])
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::CallbackImpl(ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty> const & arg0) [constructor]
>     cls.add_constructor([param('ns3::CallbackImpl< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > const &', 'arg0')])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::DoGetTypeid() [member function]
>     cls.add_method('DoGetTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True)
>     ## callback.h (module 'core'): std::string ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::GetTypeid() const [member function]
>     cls.add_method('GetTypeid', 
>                    'std::string', 
>                    [], 
>                    is_const=True, is_virtual=True)
>     ## callback.h (module 'core'): unsigned char ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::operator()(ns3::Ptr<ns3::QueueItem> arg0) [member operator]
>     cls.add_method('operator()', 
>                    'unsigned char', 
>                    [param('ns3::Ptr< ns3::QueueItem >', 'arg0')], 
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12268c12221
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12290c12243
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12313c12266
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12335c12288
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12357c12310
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12379c12332
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12401c12354
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12423c12376
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12445c12398
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12467c12420
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12489c12442
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12511c12464
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12533c12486
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12555c12508
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12577c12530
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12599c12552
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12621c12574
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12656,12720c12609
<                    is_virtual=True, visibility='protected')
<     return
< 
< def register_Ns3DropTailQueue__Ns3Packet_methods(root_module, cls):
<     ## drop-tail-queue.h (module 'network'): static ns3::TypeId ns3::DropTailQueue<ns3::Packet>::GetTypeId() [member function]
<     cls.add_method('GetTypeId', 
<                    'ns3::TypeId', 
<                    [], 
<                    is_static=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet>::DropTailQueue() [constructor]
<     cls.add_constructor([])
<     ## drop-tail-queue.h (module 'network'): bool ns3::DropTailQueue<ns3::Packet>::Enqueue(ns3::Ptr<ns3::Packet> item) [member function]
<     cls.add_method('Enqueue', 
<                    'bool', 
<                    [param('ns3::Ptr< ns3::Packet >', 'item')], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Dequeue() [member function]
<     cls.add_method('Dequeue', 
<                    'ns3::Ptr< ns3::Packet >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Remove() [member function]
<     cls.add_method('Remove', 
<                    'ns3::Ptr< ns3::Packet >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<const ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Peek() const [member function]
<     cls.add_method('Peek', 
<                    'ns3::Ptr< ns3::Packet const >', 
<                    [], 
<                    is_const=True, is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet>::DropTailQueue(ns3::DropTailQueue<ns3::Packet> const & arg0) [constructor]
<     cls.add_constructor([param('ns3::DropTailQueue< ns3::Packet > const &', 'arg0')])
<     return
< 
< def register_Ns3DropTailQueue__Ns3QueueDiscItem_methods(root_module, cls):
<     ## drop-tail-queue.h (module 'network'): static ns3::TypeId ns3::DropTailQueue<ns3::QueueDiscItem>::GetTypeId() [member function]
<     cls.add_method('GetTypeId', 
<                    'ns3::TypeId', 
<                    [], 
<                    is_static=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem>::DropTailQueue() [constructor]
<     cls.add_constructor([])
<     ## drop-tail-queue.h (module 'network'): bool ns3::DropTailQueue<ns3::QueueDiscItem>::Enqueue(ns3::Ptr<ns3::QueueDiscItem> item) [member function]
<     cls.add_method('Enqueue', 
<                    'bool', 
<                    [param('ns3::Ptr< ns3::QueueDiscItem >', 'item')], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Dequeue() [member function]
<     cls.add_method('Dequeue', 
<                    'ns3::Ptr< ns3::QueueDiscItem >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Remove() [member function]
<     cls.add_method('Remove', 
<                    'ns3::Ptr< ns3::QueueDiscItem >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<const ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Peek() const [member function]
<     cls.add_method('Peek', 
<                    'ns3::Ptr< ns3::QueueDiscItem const >', 
<                    [], 
<                    is_const=True, is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem>::DropTailQueue(ns3::DropTailQueue<ns3::QueueDiscItem> const & arg0) [constructor]
<     cls.add_constructor([param('ns3::DropTailQueue< ns3::QueueDiscItem > const &', 'arg0')])
---
>                    visibility='protected', is_virtual=True)
12793c12682
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
12906c12795
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12916c12805
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12933c12822
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12943c12832
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
diff ../../NS3-WiGig/src/applications/bindings/modulegen__gcc_LP64.py ../../ns-3-dev-git/src/applications/bindings/modulegen__gcc_LP64.py
37,39c37,39
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator', 'ns3::ApplicationContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator*', 'ns3::ApplicationContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Application > > const_iterator&', 'ns3::ApplicationContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator', u'ns3::ApplicationContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator*', u'ns3::ApplicationContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Application > > const_iterator&', u'ns3::ApplicationContainer::Iterator&')
45c45
<     module.add_class('AsciiTraceHelperForDevice', import_from_module='ns.network', allow_subclassing=True)
---
>     module.add_class('AsciiTraceHelperForDevice', allow_subclassing=True, import_from_module='ns.network')
50,52c50,52
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator', 'ns3::AttributeConstructionList::CIterator')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator*', 'ns3::AttributeConstructionList::CIterator*')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator&', 'ns3::AttributeConstructionList::CIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator', u'ns3::AttributeConstructionList::CIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator*', u'ns3::AttributeConstructionList::CIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator&', u'ns3::AttributeConstructionList::CIterator&')
73,75c73,75
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator', 'ns3::ChannelList::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator*', 'ns3::ChannelList::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Channel > > const_iterator&', 'ns3::ChannelList::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator', u'ns3::ChannelList::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator*', u'ns3::ChannelList::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Channel > > const_iterator&', u'ns3::ChannelList::Iterator&')
77c77
<     module.add_class('DataOutputCallback', import_from_module='ns.stats', allow_subclassing=True)
---
>     module.add_class('DataOutputCallback', allow_subclassing=True, import_from_module='ns.stats')
140,142c140,142
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >', 'ns3::LogComponent::ComponentList')
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >*', 'ns3::LogComponent::ComponentList*')
<     typehandlers.add_type_alias('std::map< std::string, ns3::LogComponent * >&', 'ns3::LogComponent::ComponentList&')
---
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >', u'ns3::LogComponent::ComponentList')
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >*', u'ns3::LogComponent::ComponentList*')
>     typehandlers.add_type_alias(u'std::map< std::string, ns3::LogComponent * >&', u'ns3::LogComponent::ComponentList&')
149,151c149,151
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )', 'ns3::Mac48Address::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )*', 'ns3::Mac48Address::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )&', 'ns3::Mac48Address::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )', u'ns3::Mac48Address::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )*', u'ns3::Mac48Address::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )&', u'ns3::Mac48Address::TracedCallback&')
164,166c164,166
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator', 'ns3::NetDeviceContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator*', 'ns3::NetDeviceContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator&', 'ns3::NetDeviceContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator', u'ns3::NetDeviceContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator*', u'ns3::NetDeviceContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::NetDevice > > const_iterator&', u'ns3::NetDeviceContainer::Iterator&')
169,171c169,171
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeContainer::Iterator&')
174,176c174,176
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeList::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeList::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeList::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeList::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeList::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeList::Iterator&')
178c178
<     module.add_class('NonCopyable', import_from_module='ns.core', destructor_visibility='protected')
---
>     module.add_class('NonCopyable', destructor_visibility='protected', import_from_module='ns.core')
180c180
<     module.add_class('ObjectBase', import_from_module='ns.core', allow_subclassing=True)
---
>     module.add_class('ObjectBase', allow_subclassing=True, import_from_module='ns.core')
217,222c217,222
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator', 'ns3::PbbAddressTlvBlock::Iterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator*', 'ns3::PbbAddressTlvBlock::Iterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator&', 'ns3::PbbAddressTlvBlock::Iterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator', 'ns3::PbbAddressTlvBlock::ConstIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator*', 'ns3::PbbAddressTlvBlock::ConstIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator&', 'ns3::PbbAddressTlvBlock::ConstIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator', u'ns3::PbbAddressTlvBlock::Iterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator*', u'ns3::PbbAddressTlvBlock::Iterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > iterator&', u'ns3::PbbAddressTlvBlock::Iterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator', u'ns3::PbbAddressTlvBlock::ConstIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator*', u'ns3::PbbAddressTlvBlock::ConstIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressTlv > > const_iterator&', u'ns3::PbbAddressTlvBlock::ConstIterator&')
225,230c225,230
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbTlvBlock::Iterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbTlvBlock::Iterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbTlvBlock::Iterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbTlvBlock::ConstIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbTlvBlock::ConstIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbTlvBlock::ConstIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbTlvBlock::Iterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbTlvBlock::Iterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbTlvBlock::Iterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbTlvBlock::ConstIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbTlvBlock::ConstIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbTlvBlock::ConstIterator&')
238c238
<     module.add_class('PcapHelperForDevice', import_from_module='ns.network', allow_subclassing=True)
---
>     module.add_class('PcapHelperForDevice', allow_subclassing=True, import_from_module='ns.network')
244c244
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::ObjectBase'], template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'], parent=root_module['ns3::ObjectBase'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
246c246
<     module.add_class('Simulator', import_from_module='ns.core', destructor_visibility='private')
---
>     module.add_class('Simulator', destructor_visibility='private', import_from_module='ns.core')
250c250
<     module.add_class('StatisticalSummary', import_from_module='ns.stats', allow_subclassing=True)
---
>     module.add_class('StatisticalSummary', allow_subclassing=True, import_from_module='ns.stats')
275,277c275,277
<     typehandlers.add_type_alias('uint32_t', 'ns3::TypeId::hash_t')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::TypeId::hash_t*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::TypeId::hash_t&')
---
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::TypeId::hash_t')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::TypeId::hash_t*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::TypeId::hash_t&')
310,312c310,312
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )', 'ns3::PacketBurst::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )*', 'ns3::PacketBurst::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )&', 'ns3::PacketBurst::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )', u'ns3::PacketBurst::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )*', u'ns3::PacketBurst::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::PacketBurst const > )&', u'ns3::PacketBurst::TracedCallback&')
352c352
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
354c354
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
356c356
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
358c358
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
360c360
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
362c362
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
364c364
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NetDeviceQueue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NetDeviceQueue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NetDeviceQueue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NetDeviceQueue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
366c366
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
368c368
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
370c370
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
372c372
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbAddressBlock', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbAddressBlock>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbAddressBlock', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbAddressBlock>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
374c374
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbMessage', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbMessage>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbMessage', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbMessage>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
376c376
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::Header'], template_parameters=['ns3::PbbPacket', 'ns3::Header', 'ns3::DefaultDeleter<ns3::PbbPacket>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbPacket', 'ns3::Header', 'ns3::DefaultDeleter<ns3::PbbPacket>'], parent=root_module['ns3::Header'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
378c378
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::PbbTlv', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbTlv>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::PbbTlv', 'ns3::empty', 'ns3::DefaultDeleter<ns3::PbbTlv>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
380c380
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
382c382
<     module.add_class('SimpleRefCount', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::ThreeGppHttpServerTxBuffer', 'ns3::empty', 'ns3::DefaultDeleter<ns3::ThreeGppHttpServerTxBuffer>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, template_parameters=['ns3::ThreeGppHttpServerTxBuffer', 'ns3::empty', 'ns3::DefaultDeleter<ns3::ThreeGppHttpServerTxBuffer>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
384c384
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
425,427c425,427
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )', 'ns3::Time::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )*', 'ns3::Time::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )&', 'ns3::Time::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )', u'ns3::Time::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )*', u'ns3::Time::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )&', u'ns3::Time::TracedCallback&')
446,451c446,451
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )', 'ns3::Application::DelayAddressCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )*', 'ns3::Application::DelayAddressCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time const &, ns3::Address const & )&', 'ns3::Application::DelayAddressCallback&')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )', 'ns3::Application::StateTransitionCallback')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )*', 'ns3::Application::StateTransitionCallback*')
<     typehandlers.add_type_alias('void ( * ) ( std::string const &, std::string const & )&', 'ns3::Application::StateTransitionCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )', u'ns3::Application::DelayAddressCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )*', u'ns3::Application::DelayAddressCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time const &, ns3::Address const & )&', u'ns3::Application::DelayAddressCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )', u'ns3::Application::StateTransitionCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )*', u'ns3::Application::StateTransitionCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::string const &, std::string const & )&', u'ns3::Application::StateTransitionCallback&')
455c455
<     module.add_class('AttributeChecker', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
---
>     module.add_class('AttributeChecker', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
457c457
<     module.add_class('AttributeValue', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
---
>     module.add_class('AttributeValue', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
551c551
<     module.add_class('MinMaxAvgTotalCalculator', import_from_module='ns.stats', parent=[root_module['ns3::DataCalculator'], root_module['ns3::StatisticalSummary']], template_parameters=['unsigned int'])
---
>     module.add_class('MinMaxAvgTotalCalculator', import_from_module='ns.stats', template_parameters=['unsigned int'], parent=[root_module['ns3::DataCalculator'], root_module['ns3::StatisticalSummary']])
556,564c556,564
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::NetDevice::LinkChangeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::NetDevice::LinkChangeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::NetDevice::LinkChangeTracedCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::ReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::ReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::ReceiveCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::PromiscReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::PromiscReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::PromiscReceiveCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::NetDevice::LinkChangeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::NetDevice::LinkChangeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::NetDevice::LinkChangeTracedCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::ReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::ReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::ReceiveCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::PromiscReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::PromiscReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::PromiscReceiveCallback&')
567,569c567,569
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDeviceQueue::WakeCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDeviceQueue::WakeCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDeviceQueue::WakeCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDeviceQueue::WakeCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDeviceQueue::WakeCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDeviceQueue::WakeCallback&')
572,574c572,574
<     typehandlers.add_type_alias('std::function< unsigned long ( ns3::Ptr< ns3::QueueItem > ) >', 'ns3::NetDeviceQueueInterface::SelectQueueCallback')
<     typehandlers.add_type_alias('std::function< unsigned long ( ns3::Ptr< ns3::QueueItem > ) >*', 'ns3::NetDeviceQueueInterface::SelectQueueCallback*')
<     typehandlers.add_type_alias('std::function< unsigned long ( ns3::Ptr< ns3::QueueItem > ) >&', 'ns3::NetDeviceQueueInterface::SelectQueueCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDeviceQueueInterface::SelectQueueCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDeviceQueueInterface::SelectQueueCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDeviceQueueInterface::SelectQueueCallback&')
579,584c579,584
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::ProtocolHandler')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::ProtocolHandler*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::ProtocolHandler&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::DeviceAdditionListener')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::DeviceAdditionListener*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::DeviceAdditionListener&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::ProtocolHandler')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::ProtocolHandler*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::ProtocolHandler&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::DeviceAdditionListener')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::DeviceAdditionListener*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::DeviceAdditionListener&')
597,614c597,614
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )', 'ns3::Packet::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )*', 'ns3::Packet::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )&', 'ns3::Packet::TracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', 'ns3::Packet::AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', 'ns3::Packet::AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', 'ns3::Packet::AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', 'ns3::Packet::TwoAddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', 'ns3::Packet::TwoAddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', 'ns3::Packet::TwoAddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', 'ns3::Packet::Mac48AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', 'ns3::Packet::Mac48AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', 'ns3::Packet::Mac48AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::Packet::SizeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::Packet::SizeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::Packet::SizeTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', 'ns3::Packet::SinrTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', 'ns3::Packet::SinrTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', 'ns3::Packet::SinrTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )', u'ns3::Packet::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )*', u'ns3::Packet::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )&', u'ns3::Packet::TracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', u'ns3::Packet::AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', u'ns3::Packet::AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', u'ns3::Packet::AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', u'ns3::Packet::TwoAddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', u'ns3::Packet::TwoAddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', u'ns3::Packet::TwoAddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', u'ns3::Packet::Mac48AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', u'ns3::Packet::Mac48AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', u'ns3::Packet::Mac48AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::Packet::SizeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::Packet::SizeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::Packet::SizeTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', u'ns3::Packet::SinrTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', u'ns3::Packet::SinrTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', u'ns3::Packet::SinrTracedCallback&')
631,648c631,648
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator', 'ns3::PbbAddressBlock::AddressIterator')
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator*', 'ns3::PbbAddressBlock::AddressIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Address > iterator&', 'ns3::PbbAddressBlock::AddressIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator', 'ns3::PbbAddressBlock::ConstAddressIterator')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator*', 'ns3::PbbAddressBlock::ConstAddressIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Address > const_iterator&', 'ns3::PbbAddressBlock::ConstAddressIterator&')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator', 'ns3::PbbAddressBlock::PrefixIterator')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator*', 'ns3::PbbAddressBlock::PrefixIterator*')
<     typehandlers.add_type_alias('std::list< unsigned char > iterator&', 'ns3::PbbAddressBlock::PrefixIterator&')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator', 'ns3::PbbAddressBlock::ConstPrefixIterator')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator*', 'ns3::PbbAddressBlock::ConstPrefixIterator*')
<     typehandlers.add_type_alias('std::list< unsigned char > const_iterator&', 'ns3::PbbAddressBlock::ConstPrefixIterator&')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator', 'ns3::PbbAddressBlock::TlvIterator')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator*', 'ns3::PbbAddressBlock::TlvIterator*')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::Iterator&', 'ns3::PbbAddressBlock::TlvIterator&')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator', 'ns3::PbbAddressBlock::ConstTlvIterator')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator*', 'ns3::PbbAddressBlock::ConstTlvIterator*')
<     typehandlers.add_type_alias('ns3::PbbAddressTlvBlock::ConstIterator&', 'ns3::PbbAddressBlock::ConstTlvIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator', u'ns3::PbbAddressBlock::AddressIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator*', u'ns3::PbbAddressBlock::AddressIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > iterator&', u'ns3::PbbAddressBlock::AddressIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator', u'ns3::PbbAddressBlock::ConstAddressIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator*', u'ns3::PbbAddressBlock::ConstAddressIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Address > const_iterator&', u'ns3::PbbAddressBlock::ConstAddressIterator&')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator', u'ns3::PbbAddressBlock::PrefixIterator')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator*', u'ns3::PbbAddressBlock::PrefixIterator*')
>     typehandlers.add_type_alias(u'std::list< unsigned char > iterator&', u'ns3::PbbAddressBlock::PrefixIterator&')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator', u'ns3::PbbAddressBlock::ConstPrefixIterator')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator*', u'ns3::PbbAddressBlock::ConstPrefixIterator*')
>     typehandlers.add_type_alias(u'std::list< unsigned char > const_iterator&', u'ns3::PbbAddressBlock::ConstPrefixIterator&')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator', u'ns3::PbbAddressBlock::TlvIterator')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator*', u'ns3::PbbAddressBlock::TlvIterator*')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::Iterator&', u'ns3::PbbAddressBlock::TlvIterator&')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator', u'ns3::PbbAddressBlock::ConstTlvIterator')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator*', u'ns3::PbbAddressBlock::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'ns3::PbbAddressTlvBlock::ConstIterator&', u'ns3::PbbAddressBlock::ConstTlvIterator&')
655,666c655,666
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbMessage::TlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbMessage::TlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbMessage::TlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbMessage::ConstTlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbMessage::ConstTlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbMessage::ConstTlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator', 'ns3::PbbMessage::AddressBlockIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator*', 'ns3::PbbMessage::AddressBlockIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator&', 'ns3::PbbMessage::AddressBlockIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator', 'ns3::PbbMessage::ConstAddressBlockIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator*', 'ns3::PbbMessage::ConstAddressBlockIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator&', 'ns3::PbbMessage::ConstAddressBlockIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbMessage::TlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbMessage::TlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbMessage::TlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbMessage::ConstTlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbMessage::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbMessage::ConstTlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator', u'ns3::PbbMessage::AddressBlockIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator*', u'ns3::PbbMessage::AddressBlockIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > iterator&', u'ns3::PbbMessage::AddressBlockIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator', u'ns3::PbbMessage::ConstAddressBlockIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator*', u'ns3::PbbMessage::ConstAddressBlockIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbAddressBlock > > const_iterator&', u'ns3::PbbMessage::ConstAddressBlockIterator&')
673,684c673,684
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator', 'ns3::PbbPacket::TlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', 'ns3::PbbPacket::TlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', 'ns3::PbbPacket::TlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', 'ns3::PbbPacket::ConstTlvIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', 'ns3::PbbPacket::ConstTlvIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', 'ns3::PbbPacket::ConstTlvIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator', 'ns3::PbbPacket::MessageIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator*', 'ns3::PbbPacket::MessageIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > iterator&', 'ns3::PbbPacket::MessageIterator&')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator', 'ns3::PbbPacket::ConstMessageIterator')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator*', 'ns3::PbbPacket::ConstMessageIterator*')
<     typehandlers.add_type_alias('std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator&', 'ns3::PbbPacket::ConstMessageIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator', u'ns3::PbbPacket::TlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator*', u'ns3::PbbPacket::TlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > iterator&', u'ns3::PbbPacket::TlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator', u'ns3::PbbPacket::ConstTlvIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator*', u'ns3::PbbPacket::ConstTlvIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbTlv > > const_iterator&', u'ns3::PbbPacket::ConstTlvIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator', u'ns3::PbbPacket::MessageIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator*', u'ns3::PbbPacket::MessageIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > iterator&', u'ns3::PbbPacket::MessageIterator&')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator', u'ns3::PbbPacket::ConstMessageIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator*', u'ns3::PbbPacket::ConstMessageIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::Ptr< ns3::PbbMessage > > const_iterator&', u'ns3::PbbPacket::ConstMessageIterator&')
689,699c689,692
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet> [class]
<     module.add_class('Queue', import_from_module='ns.network', parent=root_module['ns3::QueueBase'], template_parameters=['ns3::Packet'])
<     typehandlers.add_type_alias('ns3::Packet', 'ns3::Queue< ns3::Packet > ItemType')
<     typehandlers.add_type_alias('ns3::Packet*', 'ns3::Queue< ns3::Packet > ItemType*')
<     typehandlers.add_type_alias('ns3::Packet&', 'ns3::Queue< ns3::Packet > ItemType&')
<     module.add_typedef(root_module['ns3::Packet'], 'ItemType')
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem> [class]
<     module.add_class('Queue', import_from_module='ns.network', parent=root_module['ns3::QueueBase'], template_parameters=['ns3::QueueDiscItem'])
<     typehandlers.add_type_alias('ns3::QueueDiscItem', 'ns3::Queue< ns3::QueueDiscItem > ItemType')
<     typehandlers.add_type_alias('ns3::QueueDiscItem*', 'ns3::Queue< ns3::QueueDiscItem > ItemType*')
<     typehandlers.add_type_alias('ns3::QueueDiscItem&', 'ns3::Queue< ns3::QueueDiscItem > ItemType&')
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::Packet> [class]
>     module.add_class('Queue', import_from_module='ns.network', template_parameters=['ns3::Packet'], parent=root_module['ns3::QueueBase'])
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::QueueDiscItem> [class]
>     module.add_class('Queue', import_from_module='ns.network', template_parameters=['ns3::QueueDiscItem'], parent=root_module['ns3::QueueBase'])
704,706c697,699
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', 'ns3::QueueItem::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', 'ns3::QueueItem::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', 'ns3::QueueItem::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', u'ns3::QueueItem::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', u'ns3::QueueItem::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', u'ns3::QueueItem::TracedCallback&')
725,727c718,720
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )', 'ns3::ThreeGppHttpClient::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )*', 'ns3::ThreeGppHttpClient::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )&', 'ns3::ThreeGppHttpClient::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )', u'ns3::ThreeGppHttpClient::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )*', u'ns3::ThreeGppHttpClient::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpClient const > )&', u'ns3::ThreeGppHttpClient::TracedCallback&')
732,737c725,730
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )*', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t )&', 'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )*', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )&', 'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )*', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t )&', u'ns3::ThreeGppHttpServer::ThreeGppHttpObjectCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )*', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::ThreeGppHttpServer const >, ns3::Ptr< ns3::Socket > )&', u'ns3::ThreeGppHttpServer::ConnectionEstablishedCallback&')
767c760
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
769c762
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
771c764
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
773c766,768
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty> [class]
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['unsigned char', 'ns3::Ptr<ns3::QueueItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
775c770
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Time &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Time &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
777c772
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const std::basic_string<char> &', 'const std::basic_string<char> &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const std::basic_string<char> &', 'const std::basic_string<char> &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
779c774
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
781c776
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
783c778
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
785c780
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::QueueDiscItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::QueueDiscItem>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
787c782
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::Ptr<const ns3::Packet>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
789c784
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpClient>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
791c786
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpServer>', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::ThreeGppHttpServer>', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
793c788
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
795c790
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
797c792
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
799c794
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
801c796
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
803c798
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
805c800
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
807c802
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'unsigned int', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'unsigned int', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
809,813c804
<     module.add_class('CounterCalculator', import_from_module='ns.stats', parent=root_module['ns3::DataCalculator'], template_parameters=['unsigned int'])
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet> [class]
<     module.add_class('DropTailQueue', import_from_module='ns.network', parent=root_module['ns3::Queue< ns3::Packet >'], template_parameters=['ns3::Packet'])
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem> [class]
<     module.add_class('DropTailQueue', import_from_module='ns.network', parent=root_module['ns3::Queue< ns3::QueueDiscItem >'], template_parameters=['ns3::QueueDiscItem'])
---
>     module.add_class('CounterCalculator', import_from_module='ns.stats', template_parameters=['unsigned int'], parent=root_module['ns3::DataCalculator'])
824,858c815,849
<     module.add_container('std::map< std::string, ns3::LogComponent * >', ('std::string', 'ns3::LogComponent *'), container_type='map')
<     module.add_container('std::list< ns3::Ptr< ns3::Packet > >', 'ns3::Ptr< ns3::Packet >', container_type='list')
<     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type='vector')
<     module.add_container('std::list< unsigned int >', 'unsigned int', container_type='list')
<     module.add_container('std::list< ns3::Ptr< ns3::Socket > >', 'ns3::Ptr< ns3::Socket >', container_type='list')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >', 'ns3::SequenceNumber32')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >*', 'ns3::SequenceNumber32*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned int, int >&', 'ns3::SequenceNumber32&')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >', 'ns3::SequenceNumber16')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >*', 'ns3::SequenceNumber16*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned short, short >&', 'ns3::SequenceNumber16&')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >', 'ns3::SequenceNumber8')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >*', 'ns3::SequenceNumber8*')
<     typehandlers.add_type_alias('ns3::SequenceNumber< unsigned char, signed char >&', 'ns3::SequenceNumber8&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyTxStartCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyTxStartCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyTxStartCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyTxEndCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyTxEndCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyTxEndCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxStartCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxStartCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxStartCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxEndErrorCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxEndErrorCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxEndErrorCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::GenericPhyRxEndOkCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::GenericPhyRxEndOkCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::GenericPhyRxEndOkCallback&')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )', 'ns3::TimePrinter')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )*', 'ns3::TimePrinter*')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )&', 'ns3::TimePrinter&')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )', 'ns3::NodePrinter')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )*', 'ns3::NodePrinter*')
<     typehandlers.add_type_alias('void ( * ) ( std::ostream & )&', 'ns3::NodePrinter&')
---
>     module.add_container('std::map< std::string, ns3::LogComponent * >', ('std::string', 'ns3::LogComponent *'), container_type=u'map')
>     module.add_container('std::list< ns3::Ptr< ns3::Packet > >', 'ns3::Ptr< ns3::Packet >', container_type=u'list')
>     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type=u'vector')
>     module.add_container('std::list< unsigned int >', 'unsigned int', container_type=u'list')
>     module.add_container('std::list< ns3::Ptr< ns3::Socket > >', 'ns3::Ptr< ns3::Socket >', container_type=u'list')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >', u'ns3::SequenceNumber32')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >*', u'ns3::SequenceNumber32*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned int, int >&', u'ns3::SequenceNumber32&')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >', u'ns3::SequenceNumber16')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >*', u'ns3::SequenceNumber16*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned short, short >&', u'ns3::SequenceNumber16&')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >', u'ns3::SequenceNumber8')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >*', u'ns3::SequenceNumber8*')
>     typehandlers.add_type_alias(u'ns3::SequenceNumber< unsigned char, signed char >&', u'ns3::SequenceNumber8&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyTxStartCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyTxStartCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyTxStartCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyTxEndCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyTxEndCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyTxEndCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxStartCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxStartCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxStartCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxEndErrorCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxEndErrorCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxEndErrorCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::GenericPhyRxEndOkCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::GenericPhyRxEndOkCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::GenericPhyRxEndOkCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )', u'ns3::LogTimePrinter')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )*', u'ns3::LogTimePrinter*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )&', u'ns3::LogTimePrinter&')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )', u'ns3::LogNodePrinter')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )*', u'ns3::LogNodePrinter*')
>     typehandlers.add_type_alias(u'void ( * ) ( std::ostream & )&', u'ns3::LogNodePrinter&')
905,910c896,901
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash32Function_ptr')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash32Function_ptr*')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash32Function_ptr&')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash64Function_ptr')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash64Function_ptr*')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash64Function_ptr&')
---
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash32Function_ptr')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash32Function_ptr*')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash32Function_ptr&')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash64Function_ptr')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash64Function_ptr*')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash64Function_ptr&')
933,965c924,956
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )', 'ns3::TracedValueCallback::Time')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )*', 'ns3::TracedValueCallback::Time*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )&', 'ns3::TracedValueCallback::Time&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )', 'ns3::TracedValueCallback::SequenceNumber32')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )*', 'ns3::TracedValueCallback::SequenceNumber32*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )&', 'ns3::TracedValueCallback::SequenceNumber32&')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )', 'ns3::TracedValueCallback::Bool')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )*', 'ns3::TracedValueCallback::Bool*')
<     typehandlers.add_type_alias('void ( * ) ( bool, bool )&', 'ns3::TracedValueCallback::Bool&')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )', 'ns3::TracedValueCallback::Int8')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )*', 'ns3::TracedValueCallback::Int8*')
<     typehandlers.add_type_alias('void ( * ) ( int8_t, int8_t )&', 'ns3::TracedValueCallback::Int8&')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )', 'ns3::TracedValueCallback::Uint8')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )*', 'ns3::TracedValueCallback::Uint8*')
<     typehandlers.add_type_alias('void ( * ) ( uint8_t, uint8_t )&', 'ns3::TracedValueCallback::Uint8&')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )', 'ns3::TracedValueCallback::Int16')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )*', 'ns3::TracedValueCallback::Int16*')
<     typehandlers.add_type_alias('void ( * ) ( int16_t, int16_t )&', 'ns3::TracedValueCallback::Int16&')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )', 'ns3::TracedValueCallback::Uint16')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )*', 'ns3::TracedValueCallback::Uint16*')
<     typehandlers.add_type_alias('void ( * ) ( uint16_t, uint16_t )&', 'ns3::TracedValueCallback::Uint16&')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )', 'ns3::TracedValueCallback::Int32')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )*', 'ns3::TracedValueCallback::Int32*')
<     typehandlers.add_type_alias('void ( * ) ( int32_t, int32_t )&', 'ns3::TracedValueCallback::Int32&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::TracedValueCallback::Uint32')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::TracedValueCallback::Uint32*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::TracedValueCallback::Uint32&')
<     typehandlers.add_type_alias('void ( * ) ( double, double )', 'ns3::TracedValueCallback::Double')
<     typehandlers.add_type_alias('void ( * ) ( double, double )*', 'ns3::TracedValueCallback::Double*')
<     typehandlers.add_type_alias('void ( * ) ( double, double )&', 'ns3::TracedValueCallback::Double&')
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::TracedValueCallback::Void')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::TracedValueCallback::Void*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::TracedValueCallback::Void&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )', u'ns3::TracedValueCallback::Time')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )*', u'ns3::TracedValueCallback::Time*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )&', u'ns3::TracedValueCallback::Time&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )', u'ns3::TracedValueCallback::SequenceNumber32')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )*', u'ns3::TracedValueCallback::SequenceNumber32*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::SequenceNumber32, ns3::SequenceNumber32 )&', u'ns3::TracedValueCallback::SequenceNumber32&')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )', u'ns3::TracedValueCallback::Bool')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )*', u'ns3::TracedValueCallback::Bool*')
>     typehandlers.add_type_alias(u'void ( * ) ( bool, bool )&', u'ns3::TracedValueCallback::Bool&')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )', u'ns3::TracedValueCallback::Int8')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )*', u'ns3::TracedValueCallback::Int8*')
>     typehandlers.add_type_alias(u'void ( * ) ( int8_t, int8_t )&', u'ns3::TracedValueCallback::Int8&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )', u'ns3::TracedValueCallback::Uint8')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )*', u'ns3::TracedValueCallback::Uint8*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint8_t, uint8_t )&', u'ns3::TracedValueCallback::Uint8&')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )', u'ns3::TracedValueCallback::Int16')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )*', u'ns3::TracedValueCallback::Int16*')
>     typehandlers.add_type_alias(u'void ( * ) ( int16_t, int16_t )&', u'ns3::TracedValueCallback::Int16&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )', u'ns3::TracedValueCallback::Uint16')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )*', u'ns3::TracedValueCallback::Uint16*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint16_t, uint16_t )&', u'ns3::TracedValueCallback::Uint16&')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )', u'ns3::TracedValueCallback::Int32')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )*', u'ns3::TracedValueCallback::Int32*')
>     typehandlers.add_type_alias(u'void ( * ) ( int32_t, int32_t )&', u'ns3::TracedValueCallback::Int32&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::TracedValueCallback::Uint32')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::TracedValueCallback::Uint32*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::TracedValueCallback::Uint32&')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )', u'ns3::TracedValueCallback::Double')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )*', u'ns3::TracedValueCallback::Double*')
>     typehandlers.add_type_alias(u'void ( * ) ( double, double )&', u'ns3::TracedValueCallback::Double&')
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::TracedValueCallback::Void')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::TracedValueCallback::Void*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::TracedValueCallback::Void&')
1235a1227
>     register_Ns3CallbackImpl__Unsigned_char_Ns3Ptr__lt__ns3QueueItem__gt___Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_methods(root_module, root_module['ns3::CallbackImpl< unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >'])
1254,1255d1245
<     register_Ns3DropTailQueue__Ns3Packet_methods(root_module, root_module['ns3::DropTailQueue< ns3::Packet >'])
<     register_Ns3DropTailQueue__Ns3QueueDiscItem_methods(root_module, root_module['ns3::DropTailQueue< ns3::QueueDiscItem >'])
1541c1531
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2016c2006
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2021c2011
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2026c2016
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2031c2021
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2036c2026
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2041c2031
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2074c2064
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
2542c2532
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2634c2624
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2666c2656
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) const [member function]
---
>     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) [member function]
2669,2670c2659
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
---
>                    [param('ns3::Ipv6Prefix const &', 'prefix')])
2726,2730d2714
<     ## ipv6-address.h (module 'network'): bool ns3::Ipv6Address::HasPrefix(ns3::Ipv6Prefix const & prefix) const [member function]
<     cls.add_method('HasPrefix', 
<                    'bool', 
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
2735c2719
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
2760c2744
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2796,2800d2779
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredAddress(ns3::Address addr, ns3::Ipv6Address prefix) [member function]
<     cls.add_method('MakeAutoconfiguredAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'addr'), param('ns3::Ipv6Address', 'prefix')], 
<                    is_static=True)
2821,2825d2799
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredLinkLocalAddress(ns3::Address mac) [member function]
<     cls.add_method('MakeAutoconfiguredLinkLocalAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'mac')], 
<                    is_static=True)
2886,2889d2859
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(uint8_t * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('uint8_t *', 'prefix'), param('uint8_t', 'prefixLength')])
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(char const * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('char const *', 'prefix'), param('uint8_t', 'prefixLength')])
2906,2910d2875
<     ## ipv6-address.h (module 'network'): uint8_t ns3::Ipv6Prefix::GetMinimumPrefixLength() const [member function]
<     cls.add_method('GetMinimumPrefixLength', 
<                    'uint8_t', 
<                    [], 
<                    is_const=True)
2930c2895
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2941,2944d2905
<     ## ipv6-address.h (module 'network'): void ns3::Ipv6Prefix::SetPrefixLength(uint8_t prefixLength) [member function]
<     cls.add_method('SetPrefixLength', 
<                    'void', 
<                    [param('uint8_t', 'prefixLength')])
3026,3040d2986
<     ## mac16-address.h (module 'network'): static ns3::Mac16Address ns3::Mac16Address::GetBroadcast() [member function]
<     cls.add_method('GetBroadcast', 
<                    'ns3::Mac16Address', 
<                    [], 
<                    is_static=True)
<     ## mac16-address.h (module 'network'): static ns3::Mac16Address ns3::Mac16Address::GetMulticast(ns3::Ipv6Address address) [member function]
<     cls.add_method('GetMulticast', 
<                    'ns3::Mac16Address', 
<                    [param('ns3::Ipv6Address', 'address')], 
<                    is_static=True)
<     ## mac16-address.h (module 'network'): bool ns3::Mac16Address::IsBroadcast() const [member function]
<     cls.add_method('IsBroadcast', 
<                    'bool', 
<                    [], 
<                    is_const=True)
3046,3050d2991
<     ## mac16-address.h (module 'network'): bool ns3::Mac16Address::IsMulticast() const [member function]
<     cls.add_method('IsMulticast', 
<                    'bool', 
<                    [], 
<                    is_const=True)
3375c3316
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3414c3355
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3447,3451d3387
<     ## object-factory.h (module 'core'): bool ns3::ObjectFactory::IsTypeIdSet() const [member function]
<     cls.add_method('IsTypeIdSet', 
<                    'bool', 
<                    [], 
<                    is_const=True)
4182c4118
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4290,4294d4225
<     ## simulator.h (module 'core'): static uint64_t ns3::Simulator::GetEventCount() [member function]
<     cls.add_method('GetEventCount', 
<                    'uint64_t', 
<                    [], 
<                    is_static=True)
4361c4292
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4366c4297
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4371c4302
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4376c4307
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4381c4312
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4386c4317
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4391c4322
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4396c4327
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4438c4369
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4443c4374
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4453c4384
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4458c4389
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4790c4721
<                    template_parameters=['ns3::QueueBase'])
---
>                    template_parameters=[u'ns3::QueueBase'])
4795c4726
<                    template_parameters=['ns3::Object'])
---
>                    template_parameters=[u'ns3::Object'])
4982,4986c4913,4916
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::int64x64_t'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
4994,4997c4924,4927
<     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', u'right'))
5058c4988
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5073c5003
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5185c5115
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5190c5120
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5200c5130
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5205c5135
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5273a5204,5208
>     ## object.h (module 'core'): ns3::Ptr<ns3::NetDevice> ns3::Object::GetObject() const [member function]
>     cls.add_method('GetObject', 
>                    'ns3::Ptr< ns3::NetDevice >', 
>                    [], 
>                    is_const=True, template_parameters=[u'ns3::NetDevice'])
5295c5230
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5300c5235
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5305c5240
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5372c5307
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5609c5544
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5614c5549
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5624c5559
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5629c5564
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5739c5674
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5744c5679
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6026c5961
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6031c5966
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6036c5971
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6046c5981
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6051c5986
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6061c5996
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6070c6005
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6095c6030
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6100c6035
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6110c6045
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6115c6050
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6120c6055
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6125c6060
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6180c6115
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6185c6120
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6198c6133
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6211c6146
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6224c6159
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6237c6172
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6304c6239
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6309c6244
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6314c6249
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6386c6321
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6923c6858
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6933,6941c6868,6873
<     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', u'right'))
7136c7068
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7141c7073
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7146c7078
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7151c7083
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7164c7096
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7174c7106
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7184c7116
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7189c7121
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7418c7350
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7423c7355
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7428c7360
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7433c7365
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7445c7377
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7450c7382
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7455c7387
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7460c7392
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7472c7404
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7477c7409
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7482c7414
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7492c7424
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7497c7429
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7502c7434
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7514c7446
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7519c7451
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7524c7456
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7591c7523
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7596c7528
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7601c7533
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
7620c7552
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7625c7557
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7635c7567,7577
<                    is_static=True, template_parameters=['ns3::ObjectBase*'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::ObjectBase*'])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImplBase::GetCppTypeid() [member function]
>     cls.add_method('GetCppTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True, visibility='protected', template_parameters=[u'void'])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImplBase::GetCppTypeid() [member function]
>     cls.add_method('GetCppTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned int'])
7640c7582
<                    is_static=True, template_parameters=['void'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::NetDevice> '])
7645c7587
<                    is_static=True, template_parameters=['unsigned int'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Packet const> '])
7650c7592
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::NetDevice> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned short'])
7655c7597
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Packet const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Address const&'])
7660c7602
<                    is_static=True, template_parameters=['unsigned short'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::NetDevice::PacketType'])
7665c7607
<                    is_static=True, template_parameters=['ns3::Address const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::QueueDiscItem const> '])
7670c7612
<                    is_static=True, template_parameters=['ns3::NetDevice::PacketType'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned char'])
7675c7617
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::QueueDiscItem const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::QueueItem> '])
7680c7622
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Socket> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Socket> '])
7685c7627
<                    is_static=True, template_parameters=['bool'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'bool'])
7690c7632
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::ThreeGppHttpClient const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::ThreeGppHttpClient const> '])
7695c7637
<                    is_static=True, template_parameters=['ns3::Time const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Time const&'])
7700c7642
<                    is_static=True, template_parameters=['std::__cxx11::basic_string<char', ' std::char_traits<char>', ' std::allocator<char> > const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'std::__cxx11::basic_string<char', u' std::char_traits<char>', u' std::allocator<char> > const&'])
7705c7647
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::ThreeGppHttpServer const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::ThreeGppHttpServer const> '])
7745c7687
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7755c7697
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7833c7775
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
7856c7798
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
7912c7854
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7921c7863
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
8079c8021
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8084c8026
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8160c8102
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
8165c8107
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8170c8112
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
8324c8266
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
8329c8271
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
8502c8444
<                    is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, visibility='protected', is_virtual=True)
8797c8739
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
8802c8744
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9030c8972
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9042c8984
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9047c8989
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9052c8994
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9057c8999
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9062c9004
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9067c9009
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9072c9014
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9077c9019
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9082c9024
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9092c9034
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9097c9039
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9102c9044
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9107c9049
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9112c9054
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9117c9059
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9122c9064
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9127c9069
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9132c9074
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9137c9079
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9142c9084
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9147c9089
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9152c9094
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9157c9099
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
9162c9104
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
9165a9108,9109
>     ## net-device-queue-interface.h (module 'network'): ns3::NetDeviceQueue::NetDeviceQueue(ns3::NetDeviceQueue const & arg0) [constructor]
>     cls.add_constructor([param('ns3::NetDeviceQueue const &', 'arg0')])
9168,9182c9112,9115
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Start() [member function]
<     cls.add_method('Start', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Stop() [member function]
<     cls.add_method('Stop', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Wake() [member function]
<     cls.add_method('Wake', 
<                    'void', 
<                    [], 
<                    is_virtual=True)
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::QueueLimits> ns3::NetDeviceQueue::GetQueueLimits() [member function]
>     cls.add_method('GetQueueLimits', 
>                    'ns3::Ptr< ns3::QueueLimits >', 
>                    [])
9188,9196d9120
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::NotifyAggregatedObject(ns3::Ptr<ns3::NetDeviceQueueInterface> ndqi) [member function]
<     cls.add_method('NotifyAggregatedObject', 
<                    'void', 
<                    [param('ns3::Ptr< ns3::NetDeviceQueueInterface >', 'ndqi')])
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::SetWakeCallback(ns3::NetDeviceQueue::WakeCallback cb) [member function]
<     cls.add_method('SetWakeCallback', 
<                    'void', 
<                    [param('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')], 
<                    is_virtual=True)
9213,9218c9137,9156
<     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::QueueLimits> ns3::NetDeviceQueue::GetQueueLimits() [member function]
<     cls.add_method('GetQueueLimits', 
<                    'ns3::Ptr< ns3::QueueLimits >', 
<                    [])
<     ## net-device-queue-interface.h (module 'network'): ns3::NetDeviceQueue::NetDeviceQueue(ns3::NetDeviceQueue const & arg0) [constructor]
<     cls.add_constructor([param('ns3::NetDeviceQueue const &', 'arg0')])
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::SetWakeCallback(ns3::NetDeviceQueue::WakeCallback cb) [member function]
>     cls.add_method('SetWakeCallback', 
>                    'void', 
>                    [param('ns3::Callback< void, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Start() [member function]
>     cls.add_method('Start', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Stop() [member function]
>     cls.add_method('Stop', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueue::Wake() [member function]
>     cls.add_method('Wake', 
>                    'void', 
>                    [], 
>                    is_virtual=True)
9226c9164,9173
<     ## net-device-queue-interface.h (module 'network'): std::size_t ns3::NetDeviceQueueInterface::GetNTxQueues() const [member function]
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::CreateTxQueues() [member function]
>     cls.add_method('CreateTxQueues', 
>                    'void', 
>                    [])
>     ## net-device-queue-interface.h (module 'network'): bool ns3::NetDeviceQueueInterface::GetLateTxQueuesCreation() const [member function]
>     cls.add_method('GetLateTxQueuesCreation', 
>                    'bool', 
>                    [], 
>                    is_const=True)
>     ## net-device-queue-interface.h (module 'network'): uint8_t ns3::NetDeviceQueueInterface::GetNTxQueues() const [member function]
9228c9175
<                    'std::size_t', 
---
>                    'uint8_t', 
9236c9183
<     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::NetDeviceQueue> ns3::NetDeviceQueueInterface::GetTxQueue(std::size_t i) const [member function]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Ptr<ns3::NetDeviceQueue> ns3::NetDeviceQueueInterface::GetTxQueue(uint8_t i) const [member function]
9239c9186
<                    [param('std::size_t', 'i')], 
---
>                    [param('uint8_t', 'i')], 
9246,9247c9193,9194
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetNTxQueues(std::size_t numTxQueues) [member function]
<     cls.add_method('SetNTxQueues', 
---
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetLateTxQueuesCreation(bool value) [member function]
>     cls.add_method('SetLateTxQueuesCreation', 
9249c9196
<                    [param('std::size_t', 'numTxQueues')])
---
>                    [param('bool', 'value')])
9253c9200,9204
<                    [param('std::function< unsigned long ( ns3::Ptr< ns3::QueueItem > ) >', 'cb')])
---
>                    [param('ns3::Callback< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'cb')])
>     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::SetTxQueuesN(uint8_t numTxQueues) [member function]
>     cls.add_method('SetTxQueuesN', 
>                    'void', 
>                    [param('uint8_t', 'numTxQueues')])
9258,9263c9209
<                    is_virtual=True, visibility='protected')
<     ## net-device-queue-interface.h (module 'network'): void ns3::NetDeviceQueueInterface::NotifyNewAggregate() [member function]
<     cls.add_method('NotifyNewAggregate', 
<                    'void', 
<                    [], 
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9390c9336
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9395c9341
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9510c9456
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9515c9461
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9520c9466
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9557,9561d9502
<     ## packet.h (module 'network'): void ns3::Packet::AddByteTag(ns3::Tag const & tag, uint32_t start, uint32_t end) const [member function]
<     cls.add_method('AddByteTag', 
<                    'void', 
<                    [param('ns3::Tag const &', 'tag'), param('uint32_t', 'start'), param('uint32_t', 'end')], 
<                    is_const=True)
9764c9705
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9769c9710
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9774c9715
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9799c9740
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9925c9866
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9951c9892
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
9956c9897
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9961c9902
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
9999c9940
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
10004c9945
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
10009c9950
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
10024c9965
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
10313c10254
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10318c10259
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10323c10264
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10328c10269
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10340c10281
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10345c10286
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10350c10291
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10355c10296
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10367c10308
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10372c10313
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10377c10318
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10382c10323
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10638c10579
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10643c10584
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10648c10589
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10653c10594
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10658c10599
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, is_const=True, visibility='protected', is_virtual=True)
10670c10611
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10675c10616
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10680c10621
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10685c10626
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10690c10631
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10702c10643
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10707c10648
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10712c10653
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10717c10658
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
10722c10663
<                    is_const=True, is_virtual=True, visibility='protected')
---
>                    is_const=True, visibility='protected', is_virtual=True)
11054c10995
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11059c11000
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11084c11025
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11089c11030
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11094c11035
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11099c11040
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
11104c11045
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Queue(ns3::Queue<ns3::Packet> const & arg0) [constructor]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::Packet>::Queue(ns3::Queue<ns3::Packet> const & arg0) [constructor]
11106,11107c11047,11048
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::begin() const [member function]
<     cls.add_method('begin', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::Head() const [member function]
>     cls.add_method('Head', 
11111,11117c11052,11053
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Iterator ns3::Queue<ns3::Packet>::begin() [member function]
<     cls.add_method('begin', 
<                    'ns3::Queue< ns3::Packet > Iterator', 
<                    [], 
<                    visibility='protected')
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::end() const [member function]
<     cls.add_method('end', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::ConstIterator ns3::Queue<ns3::Packet>::Tail() const [member function]
>     cls.add_method('Tail', 
11121,11125d11056
<     ## queue.h (module 'network'): ns3::Queue<ns3::Packet>::Iterator ns3::Queue<ns3::Packet>::end() [member function]
<     cls.add_method('end', 
<                    'ns3::Queue< ns3::Packet > Iterator', 
<                    [], 
<                    visibility='protected')
11170c11101
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11175c11106
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11180c11111
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
11185c11116
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
11190c11121
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Queue(ns3::Queue<ns3::QueueDiscItem> const & arg0) [constructor]
---
>     ## net-device-queue-interface.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Queue(ns3::Queue<ns3::QueueDiscItem> const & arg0) [constructor]
11192,11193c11123,11124
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::begin() const [member function]
<     cls.add_method('begin', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::Head() const [member function]
>     cls.add_method('Head', 
11197,11203c11128,11129
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Iterator ns3::Queue<ns3::QueueDiscItem>::begin() [member function]
<     cls.add_method('begin', 
<                    'ns3::Queue< ns3::QueueDiscItem > Iterator', 
<                    [], 
<                    visibility='protected')
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::end() const [member function]
<     cls.add_method('end', 
---
>     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::ConstIterator ns3::Queue<ns3::QueueDiscItem>::Tail() const [member function]
>     cls.add_method('Tail', 
11207,11211d11132
<     ## queue.h (module 'network'): ns3::Queue<ns3::QueueDiscItem>::Iterator ns3::Queue<ns3::QueueDiscItem>::end() [member function]
<     cls.add_method('end', 
<                    'ns3::Queue< ns3::QueueDiscItem > Iterator', 
<                    [], 
<                    visibility='protected')
11350c11271
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11355c11276
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11360c11281
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11365c11286
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11370c11291
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11396c11317
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11401c11322
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11601c11522,11532
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
>     ## simple-net-device.h (module 'network'): void ns3::SimpleNetDevice::DoInitialize() [member function]
>     cls.add_method('DoInitialize', 
>                    'void', 
>                    [], 
>                    visibility='protected', is_virtual=True)
>     ## simple-net-device.h (module 'network'): void ns3::SimpleNetDevice::NotifyNewAggregate() [member function]
>     cls.add_method('NotifyNewAggregate', 
>                    'void', 
>                    [], 
>                    visibility='protected', is_virtual=True)
11638c11569
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11643c11574
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11648c11579
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11689c11620
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11694c11625
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11699c11630
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11797c11728
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11802c11733
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11807c11738
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11853c11784
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11858c11789
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11863c11794
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11880c11811
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11885c11816
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11890c11821
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11926c11857
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11931c11862
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11936c11867
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11979c11910
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
11984c11915
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
11989c11920
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12110c12041
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12115c12046
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12153c12084
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12158c12089
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
12180c12111
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12202c12133
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12224c12155
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12246c12177,12199
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
>     return
> 
> def register_Ns3CallbackImpl__Unsigned_char_Ns3Ptr__lt__ns3QueueItem__gt___Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_Ns3Empty_methods(root_module, cls):
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::CallbackImpl() [constructor]
>     cls.add_constructor([])
>     ## callback.h (module 'core'): ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::CallbackImpl(ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty> const & arg0) [constructor]
>     cls.add_constructor([param('ns3::CallbackImpl< unsigned char, ns3::Ptr< ns3::QueueItem >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty > const &', 'arg0')])
>     ## callback.h (module 'core'): static std::string ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::DoGetTypeid() [member function]
>     cls.add_method('DoGetTypeid', 
>                    'std::string', 
>                    [], 
>                    is_static=True)
>     ## callback.h (module 'core'): std::string ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::GetTypeid() const [member function]
>     cls.add_method('GetTypeid', 
>                    'std::string', 
>                    [], 
>                    is_const=True, is_virtual=True)
>     ## callback.h (module 'core'): unsigned char ns3::CallbackImpl<unsigned char, ns3::Ptr<ns3::QueueItem>, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty>::operator()(ns3::Ptr<ns3::QueueItem> arg0) [member operator]
>     cls.add_method('operator()', 
>                    'unsigned char', 
>                    [param('ns3::Ptr< ns3::QueueItem >', 'arg0')], 
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12268c12221
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12290c12243
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12313c12266
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12335c12288
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12357c12310
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12379c12332
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12401c12354
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12423c12376
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12445c12398
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12467c12420
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12489c12442
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12511c12464
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12533c12486
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12555c12508
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12577c12530
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12599c12552
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12621c12574
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
12656,12720c12609
<                    is_virtual=True, visibility='protected')
<     return
< 
< def register_Ns3DropTailQueue__Ns3Packet_methods(root_module, cls):
<     ## drop-tail-queue.h (module 'network'): static ns3::TypeId ns3::DropTailQueue<ns3::Packet>::GetTypeId() [member function]
<     cls.add_method('GetTypeId', 
<                    'ns3::TypeId', 
<                    [], 
<                    is_static=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet>::DropTailQueue() [constructor]
<     cls.add_constructor([])
<     ## drop-tail-queue.h (module 'network'): bool ns3::DropTailQueue<ns3::Packet>::Enqueue(ns3::Ptr<ns3::Packet> item) [member function]
<     cls.add_method('Enqueue', 
<                    'bool', 
<                    [param('ns3::Ptr< ns3::Packet >', 'item')], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Dequeue() [member function]
<     cls.add_method('Dequeue', 
<                    'ns3::Ptr< ns3::Packet >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Remove() [member function]
<     cls.add_method('Remove', 
<                    'ns3::Ptr< ns3::Packet >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<const ns3::Packet> ns3::DropTailQueue<ns3::Packet>::Peek() const [member function]
<     cls.add_method('Peek', 
<                    'ns3::Ptr< ns3::Packet const >', 
<                    [], 
<                    is_const=True, is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::Packet>::DropTailQueue(ns3::DropTailQueue<ns3::Packet> const & arg0) [constructor]
<     cls.add_constructor([param('ns3::DropTailQueue< ns3::Packet > const &', 'arg0')])
<     return
< 
< def register_Ns3DropTailQueue__Ns3QueueDiscItem_methods(root_module, cls):
<     ## drop-tail-queue.h (module 'network'): static ns3::TypeId ns3::DropTailQueue<ns3::QueueDiscItem>::GetTypeId() [member function]
<     cls.add_method('GetTypeId', 
<                    'ns3::TypeId', 
<                    [], 
<                    is_static=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem>::DropTailQueue() [constructor]
<     cls.add_constructor([])
<     ## drop-tail-queue.h (module 'network'): bool ns3::DropTailQueue<ns3::QueueDiscItem>::Enqueue(ns3::Ptr<ns3::QueueDiscItem> item) [member function]
<     cls.add_method('Enqueue', 
<                    'bool', 
<                    [param('ns3::Ptr< ns3::QueueDiscItem >', 'item')], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Dequeue() [member function]
<     cls.add_method('Dequeue', 
<                    'ns3::Ptr< ns3::QueueDiscItem >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Remove() [member function]
<     cls.add_method('Remove', 
<                    'ns3::Ptr< ns3::QueueDiscItem >', 
<                    [], 
<                    is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::Ptr<const ns3::QueueDiscItem> ns3::DropTailQueue<ns3::QueueDiscItem>::Peek() const [member function]
<     cls.add_method('Peek', 
<                    'ns3::Ptr< ns3::QueueDiscItem const >', 
<                    [], 
<                    is_const=True, is_virtual=True)
<     ## drop-tail-queue.h (module 'network'): ns3::DropTailQueue<ns3::QueueDiscItem>::DropTailQueue(ns3::DropTailQueue<ns3::QueueDiscItem> const & arg0) [constructor]
<     cls.add_constructor([param('ns3::DropTailQueue< ns3::QueueDiscItem > const &', 'arg0')])
---
>                    visibility='protected', is_virtual=True)
12793c12682
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
12906c12795
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12916c12805
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12933c12822
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
12943c12832
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
