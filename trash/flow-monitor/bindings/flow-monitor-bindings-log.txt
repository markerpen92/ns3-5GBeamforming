diff ../../NS3-WiGig/src/flow-monitor/bindings/modulegen__gcc_ILP32.py ../../ns-3-dev-git/src/flow-monitor/bindings/modulegen__gcc_ILP32.py
31,33c31,33
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator', 'ns3::AttributeConstructionList::CIterator')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator*', 'ns3::AttributeConstructionList::CIterator*')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator&', 'ns3::AttributeConstructionList::CIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator', u'ns3::AttributeConstructionList::CIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator*', u'ns3::AttributeConstructionList::CIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator&', u'ns3::AttributeConstructionList::CIterator&')
110,112c110,112
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )', 'ns3::Mac48Address::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )*', 'ns3::Mac48Address::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )&', 'ns3::Mac48Address::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )', u'ns3::Mac48Address::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )*', u'ns3::Mac48Address::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )&', u'ns3::Mac48Address::TracedCallback&')
121,123c121,123
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeContainer::Iterator&')
125c125
<     module.add_class('ObjectBase', import_from_module='ns.core', allow_subclassing=True)
---
>     module.add_class('ObjectBase', allow_subclassing=True, import_from_module='ns.core')
147c147
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::ObjectBase'], template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'], parent=root_module['ns3::ObjectBase'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
149c149
<     module.add_class('Simulator', import_from_module='ns.core', destructor_visibility='private')
---
>     module.add_class('Simulator', destructor_visibility='private', import_from_module='ns.core')
168,170c168,170
<     typehandlers.add_type_alias('uint32_t', 'ns3::TypeId::hash_t')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::TypeId::hash_t*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::TypeId::hash_t&')
---
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::TypeId::hash_t')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::TypeId::hash_t*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::TypeId::hash_t&')
200c200
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
202c202
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
204c204
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
206c206
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
208c208
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
210c210
<     module.add_class('SimpleRefCount', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::FlowClassifier', 'ns3::empty', 'ns3::DefaultDeleter<ns3::FlowClassifier>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, template_parameters=['ns3::FlowClassifier', 'ns3::empty', 'ns3::DefaultDeleter<ns3::FlowClassifier>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
212c212
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
214c214
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Ipv4MulticastRoute', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4MulticastRoute>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Ipv4MulticastRoute', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4MulticastRoute>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
216c216
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Ipv4Route', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4Route>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Ipv4Route', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4Route>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
218c218
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
220c220
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
222c222
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
224c224
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
226c226
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
253,255c253,255
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )', 'ns3::Time::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )*', 'ns3::Time::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )&', 'ns3::Time::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )', u'ns3::Time::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )*', u'ns3::Time::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )&', u'ns3::Time::TracedCallback&')
265c265
<     module.add_class('AttributeChecker', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
---
>     module.add_class('AttributeChecker', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
267c267
<     module.add_class('AttributeValue', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
---
>     module.add_class('AttributeValue', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
288,305c288,305
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', 'ns3::FlowMonitor::FlowStatsContainer')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >*', 'ns3::FlowMonitor::FlowStatsContainer*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >&', 'ns3::FlowMonitor::FlowStatsContainer&')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator', 'ns3::FlowMonitor::FlowStatsContainerI')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator*', 'ns3::FlowMonitor::FlowStatsContainerI*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator&', 'ns3::FlowMonitor::FlowStatsContainerI&')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator', 'ns3::FlowMonitor::FlowStatsContainerCI')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator*', 'ns3::FlowMonitor::FlowStatsContainerCI*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator&', 'ns3::FlowMonitor::FlowStatsContainerCI&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::FlowMonitor::FlowProbeContainer')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >*', 'ns3::FlowMonitor::FlowProbeContainer*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >&', 'ns3::FlowMonitor::FlowProbeContainer&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator', 'ns3::FlowMonitor::FlowProbeContainerI')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator*', 'ns3::FlowMonitor::FlowProbeContainerI*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator&', 'ns3::FlowMonitor::FlowProbeContainerI&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator', 'ns3::FlowMonitor::FlowProbeContainerCI')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator*', 'ns3::FlowMonitor::FlowProbeContainerCI*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator&', 'ns3::FlowMonitor::FlowProbeContainerCI&')
---
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >', u'ns3::FlowMonitor::FlowStatsContainer')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >*', u'ns3::FlowMonitor::FlowStatsContainer*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >&', u'ns3::FlowMonitor::FlowStatsContainer&')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator', u'ns3::FlowMonitor::FlowStatsContainerI')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator*', u'ns3::FlowMonitor::FlowStatsContainerI*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator&', u'ns3::FlowMonitor::FlowStatsContainerI&')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator', u'ns3::FlowMonitor::FlowStatsContainerCI')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator*', u'ns3::FlowMonitor::FlowStatsContainerCI*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator&', u'ns3::FlowMonitor::FlowStatsContainerCI&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >', u'ns3::FlowMonitor::FlowProbeContainer')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >*', u'ns3::FlowMonitor::FlowProbeContainer*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >&', u'ns3::FlowMonitor::FlowProbeContainer&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator', u'ns3::FlowMonitor::FlowProbeContainerI')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator*', u'ns3::FlowMonitor::FlowProbeContainerI*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator&', u'ns3::FlowMonitor::FlowProbeContainerI&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator', u'ns3::FlowMonitor::FlowProbeContainerCI')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator*', u'ns3::FlowMonitor::FlowProbeContainerCI*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator&', u'ns3::FlowMonitor::FlowProbeContainerCI&')
310,312c310,312
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >', 'ns3::FlowProbe::Stats')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >*', 'ns3::FlowProbe::Stats*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >&', 'ns3::FlowProbe::Stats&')
---
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >', u'ns3::FlowProbe::Stats')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >*', u'ns3::FlowProbe::Stats*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >&', u'ns3::FlowProbe::Stats&')
332,341c332,341
<     module.add_enum('DropReason', ['DROP_TTL_EXPIRED', 'DROP_NO_ROUTE', 'DROP_BAD_CHECKSUM', 'DROP_INTERFACE_DOWN', 'DROP_ROUTE_ERROR', 'DROP_FRAGMENT_TIMEOUT', 'DROP_DUPLICATE'], outer_class=root_module['ns3::Ipv4L3Protocol'], import_from_module='ns.internet')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', 'ns3::Ipv4L3Protocol::SentTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', 'ns3::Ipv4L3Protocol::SentTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', 'ns3::Ipv4L3Protocol::SentTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )', 'ns3::Ipv4L3Protocol::TxRxTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', 'ns3::Ipv4L3Protocol::TxRxTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', 'ns3::Ipv4L3Protocol::TxRxTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )', 'ns3::Ipv4L3Protocol::DropTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', 'ns3::Ipv4L3Protocol::DropTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', 'ns3::Ipv4L3Protocol::DropTracedCallback&')
---
>     module.add_enum('DropReason', ['DROP_TTL_EXPIRED', 'DROP_NO_ROUTE', 'DROP_BAD_CHECKSUM', 'DROP_INTERFACE_DOWN', 'DROP_ROUTE_ERROR', 'DROP_FRAGMENT_TIMEOUT'], outer_class=root_module['ns3::Ipv4L3Protocol'], import_from_module='ns.internet')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', u'ns3::Ipv4L3Protocol::SentTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', u'ns3::Ipv4L3Protocol::SentTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', u'ns3::Ipv4L3Protocol::SentTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )', u'ns3::Ipv4L3Protocol::TxRxTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', u'ns3::Ipv4L3Protocol::TxRxTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', u'ns3::Ipv4L3Protocol::TxRxTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )', u'ns3::Ipv4L3Protocol::DropTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', u'ns3::Ipv4L3Protocol::DropTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', u'ns3::Ipv4L3Protocol::DropTracedCallback&')
352,363c352,363
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::ErrorCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::ErrorCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::ErrorCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::ErrorCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::ErrorCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::ErrorCallback&')
384,392c384,392
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', 'ns3::Ipv6L3Protocol::SentTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', 'ns3::Ipv6L3Protocol::SentTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', 'ns3::Ipv6L3Protocol::SentTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )', 'ns3::Ipv6L3Protocol::TxRxTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', 'ns3::Ipv6L3Protocol::TxRxTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', 'ns3::Ipv6L3Protocol::TxRxTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )', 'ns3::Ipv6L3Protocol::DropTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', 'ns3::Ipv6L3Protocol::DropTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', 'ns3::Ipv6L3Protocol::DropTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', u'ns3::Ipv6L3Protocol::SentTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', u'ns3::Ipv6L3Protocol::SentTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', u'ns3::Ipv6L3Protocol::SentTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )', u'ns3::Ipv6L3Protocol::TxRxTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', u'ns3::Ipv6L3Protocol::TxRxTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', u'ns3::Ipv6L3Protocol::TxRxTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )', u'ns3::Ipv6L3Protocol::DropTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', u'ns3::Ipv6L3Protocol::DropTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', u'ns3::Ipv6L3Protocol::DropTracedCallback&')
407,415c407,415
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::NetDevice::LinkChangeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::NetDevice::LinkChangeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::NetDevice::LinkChangeTracedCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::ReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::ReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::ReceiveCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::PromiscReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::PromiscReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::PromiscReceiveCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::NetDevice::LinkChangeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::NetDevice::LinkChangeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::NetDevice::LinkChangeTracedCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::ReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::ReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::ReceiveCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::PromiscReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::PromiscReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::PromiscReceiveCallback&')
420,425c420,425
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::ProtocolHandler')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::ProtocolHandler*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::ProtocolHandler&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::DeviceAdditionListener')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::DeviceAdditionListener*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::DeviceAdditionListener&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::ProtocolHandler')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::ProtocolHandler*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::ProtocolHandler&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::DeviceAdditionListener')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::DeviceAdditionListener*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::DeviceAdditionListener&')
434,451c434,451
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )', 'ns3::Packet::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )*', 'ns3::Packet::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )&', 'ns3::Packet::TracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', 'ns3::Packet::AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', 'ns3::Packet::AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', 'ns3::Packet::AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', 'ns3::Packet::TwoAddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', 'ns3::Packet::TwoAddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', 'ns3::Packet::TwoAddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', 'ns3::Packet::Mac48AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', 'ns3::Packet::Mac48AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', 'ns3::Packet::Mac48AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::Packet::SizeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::Packet::SizeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::Packet::SizeTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', 'ns3::Packet::SinrTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', 'ns3::Packet::SinrTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', 'ns3::Packet::SinrTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )', u'ns3::Packet::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )*', u'ns3::Packet::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )&', u'ns3::Packet::TracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', u'ns3::Packet::AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', u'ns3::Packet::AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', u'ns3::Packet::AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', u'ns3::Packet::TwoAddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', u'ns3::Packet::TwoAddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', u'ns3::Packet::TwoAddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', u'ns3::Packet::Mac48AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', u'ns3::Packet::Mac48AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', u'ns3::Packet::Mac48AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::Packet::SizeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::Packet::SizeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::Packet::SizeTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', u'ns3::Packet::SinrTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', u'ns3::Packet::SinrTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', u'ns3::Packet::SinrTracedCallback&')
456,458c456,458
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', 'ns3::QueueItem::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', 'ns3::QueueItem::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', 'ns3::QueueItem::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', u'ns3::QueueItem::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', u'ns3::QueueItem::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', u'ns3::QueueItem::TracedCallback&')
470c470
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
472c472
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
474c474
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv4L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv4L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
476c476
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
478c478
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv6L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv6L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
480c480
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
482c482
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
484c484
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
486c486
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
488c488
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
490c490
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
492c492
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
494c494
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
497,512c497,512
<     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type='vector')
<     module.add_container('std::vector< unsigned int >', 'unsigned int', container_type='vector')
<     module.add_container('std::vector< unsigned long long >', 'long unsigned int', container_type='vector')
<     module.add_container('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', ('unsigned int', 'ns3::FlowMonitor::FlowStats'), container_type='map')
<     module.add_container('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::Ptr< ns3::FlowProbe >', container_type='vector')
<     module.add_container('std::map< unsigned int, ns3::FlowProbe::FlowStats >', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type='map')
<     module.add_container('ns3::FlowProbe::Stats', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type='map')
<     module.add_container('std::vector< std::pair< ns3::Ipv4Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv4Header::DscpType, unsigned int >', container_type='vector')
<     module.add_container('std::map< unsigned int, unsigned int >', ('unsigned int', 'unsigned int'), container_type='map')
<     module.add_container('std::vector< std::pair< ns3::Ipv6Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv6Header::DscpType, unsigned int >', container_type='vector')
<     typehandlers.add_type_alias('uint32_t', 'ns3::FlowId')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::FlowId*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::FlowId&')
<     typehandlers.add_type_alias('uint32_t', 'ns3::FlowPacketId')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::FlowPacketId*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::FlowPacketId&')
---
>     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type=u'vector')
>     module.add_container('std::vector< unsigned int >', 'unsigned int', container_type=u'vector')
>     module.add_container('std::vector< unsigned long long >', 'long unsigned int', container_type=u'vector')
>     module.add_container('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', ('unsigned int', 'ns3::FlowMonitor::FlowStats'), container_type=u'map')
>     module.add_container('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::Ptr< ns3::FlowProbe >', container_type=u'vector')
>     module.add_container('std::map< unsigned int, ns3::FlowProbe::FlowStats >', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type=u'map')
>     module.add_container('ns3::FlowProbe::Stats', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type=u'map')
>     module.add_container('std::vector< std::pair< ns3::Ipv4Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv4Header::DscpType, unsigned int >', container_type=u'vector')
>     module.add_container('std::map< unsigned int, unsigned int >', ('unsigned int', 'unsigned int'), container_type=u'map')
>     module.add_container('std::vector< std::pair< ns3::Ipv6Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv6Header::DscpType, unsigned int >', container_type=u'vector')
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::FlowId')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::FlowId*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::FlowId&')
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::FlowPacketId')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::FlowPacketId*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::FlowPacketId&')
541,546c541,546
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash32Function_ptr')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash32Function_ptr*')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash32Function_ptr&')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash64Function_ptr')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash64Function_ptr*')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash64Function_ptr&')
---
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash32Function_ptr')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash32Function_ptr*')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash32Function_ptr&')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash64Function_ptr')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash64Function_ptr*')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash64Function_ptr&')
569,571c569,571
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )', 'ns3::TracedValueCallback::Time')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )*', 'ns3::TracedValueCallback::Time*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )&', 'ns3::TracedValueCallback::Time&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )', u'ns3::TracedValueCallback::Time')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )*', u'ns3::TracedValueCallback::Time*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )&', u'ns3::TracedValueCallback::Time&')
1661c1661
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1814c1814
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1846c1846
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) const [member function]
---
>     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) [member function]
1849,1850c1849
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
---
>                    [param('ns3::Ipv6Prefix const &', 'prefix')])
1906,1910d1904
<     ## ipv6-address.h (module 'network'): bool ns3::Ipv6Address::HasPrefix(ns3::Ipv6Prefix const & prefix) const [member function]
<     cls.add_method('HasPrefix', 
<                    'bool', 
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
1915c1909
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
1940c1934
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1976,1980d1969
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredAddress(ns3::Address addr, ns3::Ipv6Address prefix) [member function]
<     cls.add_method('MakeAutoconfiguredAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'addr'), param('ns3::Ipv6Address', 'prefix')], 
<                    is_static=True)
2001,2005d1989
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredLinkLocalAddress(ns3::Address mac) [member function]
<     cls.add_method('MakeAutoconfiguredLinkLocalAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'mac')], 
<                    is_static=True)
2126,2129d2109
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(uint8_t * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('uint8_t *', 'prefix'), param('uint8_t', 'prefixLength')])
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(char const * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('char const *', 'prefix'), param('uint8_t', 'prefixLength')])
2146,2150d2125
<     ## ipv6-address.h (module 'network'): uint8_t ns3::Ipv6Prefix::GetMinimumPrefixLength() const [member function]
<     cls.add_method('GetMinimumPrefixLength', 
<                    'uint8_t', 
<                    [], 
<                    is_const=True)
2170c2145
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2181,2184d2155
<     ## ipv6-address.h (module 'network'): void ns3::Ipv6Prefix::SetPrefixLength(uint8_t prefixLength) [member function]
<     cls.add_method('SetPrefixLength', 
<                    'void', 
<                    [param('uint8_t', 'prefixLength')])
2389c2360
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2428c2399
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
2461,2465d2431
<     ## object-factory.h (module 'core'): bool ns3::ObjectFactory::IsTypeIdSet() const [member function]
<     cls.add_method('IsTypeIdSet', 
<                    'bool', 
<                    [], 
<                    is_const=True)
2709,2713d2674
<     ## simulator.h (module 'core'): static uint64_t ns3::Simulator::GetEventCount() [member function]
<     cls.add_method('GetEventCount', 
<                    'uint64_t', 
<                    [], 
<                    is_static=True)
2780c2741
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2785c2746
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2795c2756
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2800c2761
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3099,3103c3060,3063
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::int64x64_t'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
3111,3114c3071,3074
<     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', u'right'))
3175c3135
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3190c3150
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3203c3163
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3208c3168
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3218c3178
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3223c3183
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3568c3528
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3573c3533
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3578c3538
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3704c3664
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3709c3669
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3714c3674
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3724c3684
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3729c3689
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3739c3699
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3748c3708
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3773c3733
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3778c3738
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3788c3748
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3793c3753
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3798c3758
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3803c3763
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3858c3818
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3863c3823
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3876c3836
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3889c3849
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3902c3862
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3915c3875
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3982c3942
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3987c3947
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3992c3952
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
4342,4350c4302,4307
<     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', u'right'))
4545c4502
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4550c4507
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4555c4512
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4560c4517
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4573c4530
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4583c4540
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4593c4550
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4598c4555
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4610c4567
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4615c4572
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4620c4577
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4625c4582
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4637c4594
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4642c4599
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4647c4604
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4657c4614
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4662c4619
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4667c4624
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4679c4636
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4684c4641
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4689c4646
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4708c4665
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4713c4670
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4723c4680
<                    is_static=True, template_parameters=['ns3::ObjectBase*'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::ObjectBase*'])
4728c4685
<                    is_static=True, template_parameters=['void'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'void'])
4733c4690
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::NetDevice> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::NetDevice> '])
4738c4695
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Packet const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Packet const> '])
4743c4700
<                    is_static=True, template_parameters=['unsigned short'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned short'])
4748c4705
<                    is_static=True, template_parameters=['ns3::Address const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Address const&'])
4753c4710
<                    is_static=True, template_parameters=['ns3::NetDevice::PacketType'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::NetDevice::PacketType'])
4758c4715
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Socket> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Socket> '])
4763c4720
<                    is_static=True, template_parameters=['bool'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'bool'])
4768c4725
<                    is_static=True, template_parameters=['unsigned int'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned int'])
4773c4730
<                    is_static=True, template_parameters=['ns3::Ipv4Header const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv4Header const&'])
4778c4735
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Ipv4> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Ipv4> '])
4783c4740
<                    is_static=True, template_parameters=['ns3::Ipv4L3Protocol::DropReason'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv4L3Protocol::DropReason'])
4788c4745
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Ipv6> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Ipv6> '])
4793c4750
<                    is_static=True, template_parameters=['ns3::Ipv6Header const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv6Header const&'])
4798c4755
<                    is_static=True, template_parameters=['ns3::Ipv6L3Protocol::DropReason'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv6L3Protocol::DropReason'])
4902c4859
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
4907c4864
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
4912c4869
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
4936c4893
<                    is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, visibility='protected', is_virtual=True)
4946c4903
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5048c5005
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5053c5010
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5132c5089
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5161c5118
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5166c5123
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5171c5128
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5176c5133
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5181c5138
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5186c5143
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5191c5148
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5196c5153
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5201c5158
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5206c5163
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5211c5168
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5216c5173
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5221c5178
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5226c5183
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5231c5188
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5236c5193
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5246c5203
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5251c5208
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5256c5213
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5261c5218
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5266c5223
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5271c5228
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5276c5233
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5281c5238
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5286c5243
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5291c5248
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5296c5253
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5301c5258
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5306c5263
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5311c5268
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5316c5273
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5321c5278
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5326c5283
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5331c5288
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5338c5295
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
5343c5300
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
5348c5305
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
5353c5310
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
5448c5405
<                    custom_name='__call__')
---
>                    custom_name=u'__call__')
5463c5420
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5672c5629
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5677c5634
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5682c5639
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
5687c5644
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
5692c5649
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5697c5654
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5845c5802
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5850c5807
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5855c5812
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5860c5817
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5865c5822
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5870c5827
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5875c5832
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5880c5837
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5892c5849
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5897c5854
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5902c5859
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5907c5864
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5912c5869
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5917c5874
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5922c5879
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5927c5884
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5932c5889
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5937c5894
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5942c5899
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5947c5904
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5952c5909
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5957c5914
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5967c5924
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5972c5929
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5977c5934
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5982c5939
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5987c5944
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5992c5949
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5997c5954
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6002c5959
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6007c5964
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6012c5969
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6017c5974
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6022c5979
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6027c5984
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6032c5989
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6037c5994
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6042c5999
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6047c6004
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6052c6009
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6059c6016
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
6064c6021
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
6069c6026
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
6074c6031
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
6169c6126
<                    custom_name='__call__')
---
>                    custom_name=u'__call__')
6184c6141
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6434c6391
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6439c6396
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6444c6401
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6449c6406
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6454c6411
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6459c6416
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6464c6421
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6469c6426
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6595c6552
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6600c6557
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6605c6562
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6610c6567
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6615c6572
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6620c6577
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6625c6582
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6630c6587
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6635c6592
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6645c6602
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6650c6607
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6655c6612
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6660c6617
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6665c6622
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6670c6627
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6675c6632
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6680c6637
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6685c6642
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6690c6647
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6695c6652
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6700c6657
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6705c6662
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6710c6667
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6715c6672
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6842c6799
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6847c6804
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6924,6928d6880
<     ## packet.h (module 'network'): void ns3::Packet::AddByteTag(ns3::Tag const & tag, uint32_t start, uint32_t end) const [member function]
<     cls.add_method('AddByteTag', 
<                    'void', 
<                    [param('ns3::Tag const &', 'tag'), param('uint32_t', 'start'), param('uint32_t', 'end')], 
<                    is_const=True)
7260c7212
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7282c7234
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7304c7256
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7326c7278
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7348c7300
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7370c7322
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7392c7344
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7414c7366
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7436c7388
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7458c7410
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7480c7432
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7502c7454
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7524c7476
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7562c7514
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7572c7524
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7589c7541
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7599c7551
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
diff ../../NS3-WiGig/src/flow-monitor/bindings/modulegen__gcc_LP64.py ../../ns-3-dev-git/src/flow-monitor/bindings/modulegen__gcc_LP64.py
31,33c31,33
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator', 'ns3::AttributeConstructionList::CIterator')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator*', 'ns3::AttributeConstructionList::CIterator*')
<     typehandlers.add_type_alias('std::list< ns3::AttributeConstructionList::Item > const_iterator&', 'ns3::AttributeConstructionList::CIterator&')
---
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator', u'ns3::AttributeConstructionList::CIterator')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator*', u'ns3::AttributeConstructionList::CIterator*')
>     typehandlers.add_type_alias(u'std::list< ns3::AttributeConstructionList::Item > const_iterator&', u'ns3::AttributeConstructionList::CIterator&')
110,112c110,112
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )', 'ns3::Mac48Address::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )*', 'ns3::Mac48Address::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Mac48Address )&', 'ns3::Mac48Address::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )', u'ns3::Mac48Address::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )*', u'ns3::Mac48Address::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Mac48Address )&', u'ns3::Mac48Address::TracedCallback&')
121,123c121,123
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator', 'ns3::NodeContainer::Iterator')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator*', 'ns3::NodeContainer::Iterator*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::Node > > const_iterator&', 'ns3::NodeContainer::Iterator&')
---
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator', u'ns3::NodeContainer::Iterator')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator*', u'ns3::NodeContainer::Iterator*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::Node > > const_iterator&', u'ns3::NodeContainer::Iterator&')
125c125
<     module.add_class('ObjectBase', import_from_module='ns.core', allow_subclassing=True)
---
>     module.add_class('ObjectBase', allow_subclassing=True, import_from_module='ns.core')
147c147
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::ObjectBase'], template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Object', 'ns3::ObjectBase', 'ns3::ObjectDeleter'], parent=root_module['ns3::ObjectBase'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
149c149
<     module.add_class('Simulator', import_from_module='ns.core', destructor_visibility='private')
---
>     module.add_class('Simulator', destructor_visibility='private', import_from_module='ns.core')
168,170c168,170
<     typehandlers.add_type_alias('uint32_t', 'ns3::TypeId::hash_t')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::TypeId::hash_t*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::TypeId::hash_t&')
---
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::TypeId::hash_t')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::TypeId::hash_t*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::TypeId::hash_t&')
200c200
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
202c202
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeChecker', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeChecker>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
204c204
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::AttributeValue', 'ns3::empty', 'ns3::DefaultDeleter<ns3::AttributeValue>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
206c206
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::CallbackImplBase', 'ns3::empty', 'ns3::DefaultDeleter<ns3::CallbackImplBase>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
208c208
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::EventImpl', 'ns3::empty', 'ns3::DefaultDeleter<ns3::EventImpl>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
210c210
<     module.add_class('SimpleRefCount', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::FlowClassifier', 'ns3::empty', 'ns3::DefaultDeleter<ns3::FlowClassifier>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, template_parameters=['ns3::FlowClassifier', 'ns3::empty', 'ns3::DefaultDeleter<ns3::FlowClassifier>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
212c212
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Hash::Implementation', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Hash::Implementation>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
214c214
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Ipv4MulticastRoute', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4MulticastRoute>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Ipv4MulticastRoute', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4MulticastRoute>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
216c216
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Ipv4Route', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4Route>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Ipv4Route', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Ipv4Route>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
218c218
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::NixVector', 'ns3::empty', 'ns3::DefaultDeleter<ns3::NixVector>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
220c220
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::OutputStreamWrapper', 'ns3::empty', 'ns3::DefaultDeleter<ns3::OutputStreamWrapper>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
222c222
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::Packet', 'ns3::empty', 'ns3::DefaultDeleter<ns3::Packet>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
224c224
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::QueueItem', 'ns3::empty', 'ns3::DefaultDeleter<ns3::QueueItem>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
226c226
<     module.add_class('SimpleRefCount', import_from_module='ns.core', memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'), automatic_type_narrowing=True, parent=root_module['ns3::empty'], template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'])
---
>     module.add_class('SimpleRefCount', automatic_type_narrowing=True, import_from_module='ns.core', template_parameters=['ns3::TraceSourceAccessor', 'ns3::empty', 'ns3::DefaultDeleter<ns3::TraceSourceAccessor>'], parent=root_module['ns3::empty'], memory_policy=cppclass.ReferenceCountingMethodsPolicy(incref_method='Ref', decref_method='Unref', peekref_method='GetReferenceCount'))
253,255c253,255
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )', 'ns3::Time::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )*', 'ns3::Time::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time )&', 'ns3::Time::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )', u'ns3::Time::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )*', u'ns3::Time::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time )&', u'ns3::Time::TracedCallback&')
265c265
<     module.add_class('AttributeChecker', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
---
>     module.add_class('AttributeChecker', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeChecker, ns3::empty, ns3::DefaultDeleter<ns3::AttributeChecker> >'])
267c267
<     module.add_class('AttributeValue', import_from_module='ns.core', automatic_type_narrowing=True, allow_subclassing=False, parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
---
>     module.add_class('AttributeValue', allow_subclassing=False, automatic_type_narrowing=True, import_from_module='ns.core', parent=root_module['ns3::SimpleRefCount< ns3::AttributeValue, ns3::empty, ns3::DefaultDeleter<ns3::AttributeValue> >'])
288,305c288,305
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', 'ns3::FlowMonitor::FlowStatsContainer')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >*', 'ns3::FlowMonitor::FlowStatsContainer*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats >&', 'ns3::FlowMonitor::FlowStatsContainer&')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator', 'ns3::FlowMonitor::FlowStatsContainerI')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator*', 'ns3::FlowMonitor::FlowStatsContainerI*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator&', 'ns3::FlowMonitor::FlowStatsContainerI&')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator', 'ns3::FlowMonitor::FlowStatsContainerCI')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator*', 'ns3::FlowMonitor::FlowStatsContainerCI*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator&', 'ns3::FlowMonitor::FlowStatsContainerCI&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::FlowMonitor::FlowProbeContainer')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >*', 'ns3::FlowMonitor::FlowProbeContainer*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > >&', 'ns3::FlowMonitor::FlowProbeContainer&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator', 'ns3::FlowMonitor::FlowProbeContainerI')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator*', 'ns3::FlowMonitor::FlowProbeContainerI*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > iterator&', 'ns3::FlowMonitor::FlowProbeContainerI&')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator', 'ns3::FlowMonitor::FlowProbeContainerCI')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator*', 'ns3::FlowMonitor::FlowProbeContainerCI*')
<     typehandlers.add_type_alias('std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator&', 'ns3::FlowMonitor::FlowProbeContainerCI&')
---
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >', u'ns3::FlowMonitor::FlowStatsContainer')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >*', u'ns3::FlowMonitor::FlowStatsContainer*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats >&', u'ns3::FlowMonitor::FlowStatsContainer&')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator', u'ns3::FlowMonitor::FlowStatsContainerI')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator*', u'ns3::FlowMonitor::FlowStatsContainerI*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > iterator&', u'ns3::FlowMonitor::FlowStatsContainerI&')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator', u'ns3::FlowMonitor::FlowStatsContainerCI')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator*', u'ns3::FlowMonitor::FlowStatsContainerCI*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowMonitor::FlowStats > const_iterator&', u'ns3::FlowMonitor::FlowStatsContainerCI&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >', u'ns3::FlowMonitor::FlowProbeContainer')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >*', u'ns3::FlowMonitor::FlowProbeContainer*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > >&', u'ns3::FlowMonitor::FlowProbeContainer&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator', u'ns3::FlowMonitor::FlowProbeContainerI')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator*', u'ns3::FlowMonitor::FlowProbeContainerI*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > iterator&', u'ns3::FlowMonitor::FlowProbeContainerI&')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator', u'ns3::FlowMonitor::FlowProbeContainerCI')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator*', u'ns3::FlowMonitor::FlowProbeContainerCI*')
>     typehandlers.add_type_alias(u'std::vector< ns3::Ptr< ns3::FlowProbe > > const_iterator&', u'ns3::FlowMonitor::FlowProbeContainerCI&')
310,312c310,312
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >', 'ns3::FlowProbe::Stats')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >*', 'ns3::FlowProbe::Stats*')
<     typehandlers.add_type_alias('std::map< unsigned int, ns3::FlowProbe::FlowStats >&', 'ns3::FlowProbe::Stats&')
---
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >', u'ns3::FlowProbe::Stats')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >*', u'ns3::FlowProbe::Stats*')
>     typehandlers.add_type_alias(u'std::map< unsigned int, ns3::FlowProbe::FlowStats >&', u'ns3::FlowProbe::Stats&')
332,341c332,341
<     module.add_enum('DropReason', ['DROP_TTL_EXPIRED', 'DROP_NO_ROUTE', 'DROP_BAD_CHECKSUM', 'DROP_INTERFACE_DOWN', 'DROP_ROUTE_ERROR', 'DROP_FRAGMENT_TIMEOUT', 'DROP_DUPLICATE'], outer_class=root_module['ns3::Ipv4L3Protocol'], import_from_module='ns.internet')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', 'ns3::Ipv4L3Protocol::SentTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', 'ns3::Ipv4L3Protocol::SentTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', 'ns3::Ipv4L3Protocol::SentTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )', 'ns3::Ipv4L3Protocol::TxRxTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', 'ns3::Ipv4L3Protocol::TxRxTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', 'ns3::Ipv4L3Protocol::TxRxTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )', 'ns3::Ipv4L3Protocol::DropTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', 'ns3::Ipv4L3Protocol::DropTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', 'ns3::Ipv4L3Protocol::DropTracedCallback&')
---
>     module.add_enum('DropReason', ['DROP_TTL_EXPIRED', 'DROP_NO_ROUTE', 'DROP_BAD_CHECKSUM', 'DROP_INTERFACE_DOWN', 'DROP_ROUTE_ERROR', 'DROP_FRAGMENT_TIMEOUT'], outer_class=root_module['ns3::Ipv4L3Protocol'], import_from_module='ns.internet')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', u'ns3::Ipv4L3Protocol::SentTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', u'ns3::Ipv4L3Protocol::SentTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', u'ns3::Ipv4L3Protocol::SentTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )', u'ns3::Ipv4L3Protocol::TxRxTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', u'ns3::Ipv4L3Protocol::TxRxTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', u'ns3::Ipv4L3Protocol::TxRxTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )', u'ns3::Ipv4L3Protocol::DropTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )*', u'ns3::Ipv4L3Protocol::DropTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv4Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv4L3Protocol::DropReason, ns3::Ptr< ns3::Ipv4 >, uint32_t )&', u'ns3::Ipv4L3Protocol::DropTracedCallback&')
352,363c352,363
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::UnicastForwardCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::MulticastForwardCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::LocalDeliverCallback&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Ipv4RoutingProtocol::ErrorCallback')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Ipv4RoutingProtocol::ErrorCallback*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Ipv4RoutingProtocol::ErrorCallback&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4Route >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::UnicastForwardCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Ipv4MulticastRoute >, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::MulticastForwardCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, unsigned int, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::LocalDeliverCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Ipv4RoutingProtocol::ErrorCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Ipv4RoutingProtocol::ErrorCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::Packet const >, ns3::Ipv4Header const &, ns3::Socket::SocketErrno, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Ipv4RoutingProtocol::ErrorCallback&')
384,392c384,392
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', 'ns3::Ipv6L3Protocol::SentTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', 'ns3::Ipv6L3Protocol::SentTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', 'ns3::Ipv6L3Protocol::SentTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )', 'ns3::Ipv6L3Protocol::TxRxTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', 'ns3::Ipv6L3Protocol::TxRxTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', 'ns3::Ipv6L3Protocol::TxRxTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )', 'ns3::Ipv6L3Protocol::DropTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', 'ns3::Ipv6L3Protocol::DropTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', 'ns3::Ipv6L3Protocol::DropTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )', u'ns3::Ipv6L3Protocol::SentTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )*', u'ns3::Ipv6L3Protocol::SentTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, uint32_t )&', u'ns3::Ipv6L3Protocol::SentTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )', u'ns3::Ipv6L3Protocol::TxRxTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', u'ns3::Ipv6L3Protocol::TxRxTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', u'ns3::Ipv6L3Protocol::TxRxTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )', u'ns3::Ipv6L3Protocol::DropTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )*', u'ns3::Ipv6L3Protocol::DropTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ipv6Header const &, ns3::Ptr< ns3::Packet const >, ns3::Ipv6L3Protocol::DropReason, ns3::Ptr< ns3::Ipv6 >, uint32_t )&', u'ns3::Ipv6L3Protocol::DropTracedCallback&')
407,415c407,415
<     typehandlers.add_type_alias('void ( * ) (  )', 'ns3::NetDevice::LinkChangeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) (  )*', 'ns3::NetDevice::LinkChangeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) (  )&', 'ns3::NetDevice::LinkChangeTracedCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::ReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::ReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::ReceiveCallback&')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::NetDevice::PromiscReceiveCallback')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::NetDevice::PromiscReceiveCallback*')
<     typehandlers.add_type_alias('ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::NetDevice::PromiscReceiveCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) (  )', u'ns3::NetDevice::LinkChangeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) (  )*', u'ns3::NetDevice::LinkChangeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) (  )&', u'ns3::NetDevice::LinkChangeTracedCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::ReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::ReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::ReceiveCallback&')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::NetDevice::PromiscReceiveCallback')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::NetDevice::PromiscReceiveCallback*')
>     typehandlers.add_type_alias(u'ns3::Callback< bool, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::NetDevice::PromiscReceiveCallback&')
420,425c420,425
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::ProtocolHandler')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::ProtocolHandler*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::ProtocolHandler&')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', 'ns3::Node::DeviceAdditionListener')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', 'ns3::Node::DeviceAdditionListener*')
<     typehandlers.add_type_alias('ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', 'ns3::Node::DeviceAdditionListener&')
---
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::ProtocolHandler')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::ProtocolHandler*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::Ptr< ns3::Packet const >, unsigned short, ns3::Address const &, ns3::Address const &, ns3::NetDevice::PacketType, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::ProtocolHandler&')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >', u'ns3::Node::DeviceAdditionListener')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >*', u'ns3::Node::DeviceAdditionListener*')
>     typehandlers.add_type_alias(u'ns3::Callback< void, ns3::Ptr< ns3::NetDevice >, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty, ns3::empty >&', u'ns3::Node::DeviceAdditionListener&')
434,451c434,451
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )', 'ns3::Packet::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )*', 'ns3::Packet::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > )&', 'ns3::Packet::TracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', 'ns3::Packet::AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', 'ns3::Packet::AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', 'ns3::Packet::AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', 'ns3::Packet::TwoAddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', 'ns3::Packet::TwoAddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', 'ns3::Packet::TwoAddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', 'ns3::Packet::Mac48AddressTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', 'ns3::Packet::Mac48AddressTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', 'ns3::Packet::Mac48AddressTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )', 'ns3::Packet::SizeTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )*', 'ns3::Packet::SizeTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( uint32_t, uint32_t )&', 'ns3::Packet::SizeTracedCallback&')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', 'ns3::Packet::SinrTracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', 'ns3::Packet::SinrTracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', 'ns3::Packet::SinrTracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )', u'ns3::Packet::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )*', u'ns3::Packet::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > )&', u'ns3::Packet::TracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )', u'ns3::Packet::AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )*', u'ns3::Packet::AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Address const & )&', u'ns3::Packet::AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )', u'ns3::Packet::TwoAddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )*', u'ns3::Packet::TwoAddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const > const, ns3::Address const &, ns3::Address const & )&', u'ns3::Packet::TwoAddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )', u'ns3::Packet::Mac48AddressTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )*', u'ns3::Packet::Mac48AddressTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, ns3::Mac48Address )&', u'ns3::Packet::Mac48AddressTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )', u'ns3::Packet::SizeTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )*', u'ns3::Packet::SizeTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( uint32_t, uint32_t )&', u'ns3::Packet::SizeTracedCallback&')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )', u'ns3::Packet::SinrTracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )*', u'ns3::Packet::SinrTracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::Packet const >, double )&', u'ns3::Packet::SinrTracedCallback&')
456,458c456,458
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', 'ns3::QueueItem::TracedCallback')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', 'ns3::QueueItem::TracedCallback*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', 'ns3::QueueItem::TracedCallback&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )', u'ns3::QueueItem::TracedCallback')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )*', u'ns3::QueueItem::TracedCallback*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Ptr< ns3::QueueItem const > )&', u'ns3::QueueItem::TracedCallback&')
470c470
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['bool', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
472c472
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['ns3::ObjectBase *', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
474c474
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv4L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv4L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
476c476
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv4Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
478c478
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv6L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ipv6L3Protocol::DropReason', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
480c480
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'const ns3::Ipv6Header &', 'ns3::Ptr<const ns3::Packet>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
482c482
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv4>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
484c484
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<const ns3::Packet>', 'ns3::Ptr<ns3::Ipv6>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
486c486
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::Ptr<const ns3::Packet>', 'unsigned short', 'const ns3::Address &', 'const ns3::Address &', 'ns3::NetDevice::PacketType', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
488c488
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::NetDevice>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
490c490
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'const ns3::Address &', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
492c492
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
494c494
<     module.add_class('CallbackImpl', import_from_module='ns.core', parent=root_module['ns3::CallbackImplBase'], template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'])
---
>     module.add_class('CallbackImpl', import_from_module='ns.core', template_parameters=['void', 'ns3::Ptr<ns3::Socket>', 'unsigned int', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty', 'ns3::empty'], parent=root_module['ns3::CallbackImplBase'])
497,512c497,512
<     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type='vector')
<     module.add_container('std::vector< unsigned int >', 'unsigned int', container_type='vector')
<     module.add_container('std::vector< unsigned long >', 'long unsigned int', container_type='vector')
<     module.add_container('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', ('unsigned int', 'ns3::FlowMonitor::FlowStats'), container_type='map')
<     module.add_container('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::Ptr< ns3::FlowProbe >', container_type='vector')
<     module.add_container('std::map< unsigned int, ns3::FlowProbe::FlowStats >', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type='map')
<     module.add_container('ns3::FlowProbe::Stats', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type='map')
<     module.add_container('std::vector< std::pair< ns3::Ipv4Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv4Header::DscpType, unsigned int >', container_type='vector')
<     module.add_container('std::map< unsigned int, unsigned int >', ('unsigned int', 'unsigned int'), container_type='map')
<     module.add_container('std::vector< std::pair< ns3::Ipv6Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv6Header::DscpType, unsigned int >', container_type='vector')
<     typehandlers.add_type_alias('uint32_t', 'ns3::FlowId')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::FlowId*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::FlowId&')
<     typehandlers.add_type_alias('uint32_t', 'ns3::FlowPacketId')
<     typehandlers.add_type_alias('uint32_t*', 'ns3::FlowPacketId*')
<     typehandlers.add_type_alias('uint32_t&', 'ns3::FlowPacketId&')
---
>     module.add_container('std::vector< ns3::Ipv6Address >', 'ns3::Ipv6Address', container_type=u'vector')
>     module.add_container('std::vector< unsigned int >', 'unsigned int', container_type=u'vector')
>     module.add_container('std::vector< unsigned long >', 'long unsigned int', container_type=u'vector')
>     module.add_container('std::map< unsigned int, ns3::FlowMonitor::FlowStats >', ('unsigned int', 'ns3::FlowMonitor::FlowStats'), container_type=u'map')
>     module.add_container('std::vector< ns3::Ptr< ns3::FlowProbe > >', 'ns3::Ptr< ns3::FlowProbe >', container_type=u'vector')
>     module.add_container('std::map< unsigned int, ns3::FlowProbe::FlowStats >', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type=u'map')
>     module.add_container('ns3::FlowProbe::Stats', ('unsigned int', 'ns3::FlowProbe::FlowStats'), container_type=u'map')
>     module.add_container('std::vector< std::pair< ns3::Ipv4Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv4Header::DscpType, unsigned int >', container_type=u'vector')
>     module.add_container('std::map< unsigned int, unsigned int >', ('unsigned int', 'unsigned int'), container_type=u'map')
>     module.add_container('std::vector< std::pair< ns3::Ipv6Header::DscpType, unsigned int > >', 'std::pair< ns3::Ipv6Header::DscpType, unsigned int >', container_type=u'vector')
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::FlowId')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::FlowId*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::FlowId&')
>     typehandlers.add_type_alias(u'uint32_t', u'ns3::FlowPacketId')
>     typehandlers.add_type_alias(u'uint32_t*', u'ns3::FlowPacketId*')
>     typehandlers.add_type_alias(u'uint32_t&', u'ns3::FlowPacketId&')
541,546c541,546
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash32Function_ptr')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash32Function_ptr*')
<     typehandlers.add_type_alias('uint32_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash32Function_ptr&')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )', 'ns3::Hash::Hash64Function_ptr')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )*', 'ns3::Hash::Hash64Function_ptr*')
<     typehandlers.add_type_alias('uint64_t ( * ) ( char const *, std::size_t const )&', 'ns3::Hash::Hash64Function_ptr&')
---
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash32Function_ptr')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash32Function_ptr*')
>     typehandlers.add_type_alias(u'uint32_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash32Function_ptr&')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )', u'ns3::Hash::Hash64Function_ptr')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )*', u'ns3::Hash::Hash64Function_ptr*')
>     typehandlers.add_type_alias(u'uint64_t ( * ) ( char const *, std::size_t const )&', u'ns3::Hash::Hash64Function_ptr&')
569,571c569,571
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )', 'ns3::TracedValueCallback::Time')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )*', 'ns3::TracedValueCallback::Time*')
<     typehandlers.add_type_alias('void ( * ) ( ns3::Time, ns3::Time )&', 'ns3::TracedValueCallback::Time&')
---
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )', u'ns3::TracedValueCallback::Time')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )*', u'ns3::TracedValueCallback::Time*')
>     typehandlers.add_type_alias(u'void ( * ) ( ns3::Time, ns3::Time )&', u'ns3::TracedValueCallback::Time&')
1661c1661
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1814c1814
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1846c1846
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) const [member function]
---
>     ## ipv6-address.h (module 'network'): ns3::Ipv6Address ns3::Ipv6Address::CombinePrefix(ns3::Ipv6Prefix const & prefix) [member function]
1849,1850c1849
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
---
>                    [param('ns3::Ipv6Prefix const &', 'prefix')])
1906,1910d1904
<     ## ipv6-address.h (module 'network'): bool ns3::Ipv6Address::HasPrefix(ns3::Ipv6Prefix const & prefix) const [member function]
<     cls.add_method('HasPrefix', 
<                    'bool', 
<                    [param('ns3::Ipv6Prefix const &', 'prefix')], 
<                    is_const=True)
1915c1909
<                    is_const=True, deprecated=True)
---
>                    deprecated=True, is_const=True)
1940c1934
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
1976,1980d1969
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredAddress(ns3::Address addr, ns3::Ipv6Address prefix) [member function]
<     cls.add_method('MakeAutoconfiguredAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'addr'), param('ns3::Ipv6Address', 'prefix')], 
<                    is_static=True)
2001,2005d1989
<     ## ipv6-address.h (module 'network'): static ns3::Ipv6Address ns3::Ipv6Address::MakeAutoconfiguredLinkLocalAddress(ns3::Address mac) [member function]
<     cls.add_method('MakeAutoconfiguredLinkLocalAddress', 
<                    'ns3::Ipv6Address', 
<                    [param('ns3::Address', 'mac')], 
<                    is_static=True)
2126,2129d2109
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(uint8_t * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('uint8_t *', 'prefix'), param('uint8_t', 'prefixLength')])
<     ## ipv6-address.h (module 'network'): ns3::Ipv6Prefix::Ipv6Prefix(char const * prefix, uint8_t prefixLength) [constructor]
<     cls.add_constructor([param('char const *', 'prefix'), param('uint8_t', 'prefixLength')])
2146,2150d2125
<     ## ipv6-address.h (module 'network'): uint8_t ns3::Ipv6Prefix::GetMinimumPrefixLength() const [member function]
<     cls.add_method('GetMinimumPrefixLength', 
<                    'uint8_t', 
<                    [], 
<                    is_const=True)
2170c2145
<                    is_const=True, deprecated=True)
---
>                    is_const=True)
2181,2184d2155
<     ## ipv6-address.h (module 'network'): void ns3::Ipv6Prefix::SetPrefixLength(uint8_t prefixLength) [member function]
<     cls.add_method('SetPrefixLength', 
<                    'void', 
<                    [param('uint8_t', 'prefixLength')])
2389c2360
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2428c2399
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
2461,2465d2431
<     ## object-factory.h (module 'core'): bool ns3::ObjectFactory::IsTypeIdSet() const [member function]
<     cls.add_method('IsTypeIdSet', 
<                    'bool', 
<                    [], 
<                    is_const=True)
2709,2713d2674
<     ## simulator.h (module 'core'): static uint64_t ns3::Simulator::GetEventCount() [member function]
<     cls.add_method('GetEventCount', 
<                    'uint64_t', 
<                    [], 
<                    is_static=True)
2780c2741
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
2785c2746
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2795c2756
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
2800c2761
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3099,3103c3060,3063
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::int64x64_t'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::int64x64_t'], param('ns3::int64x64_t const &', u'right'))
3111,3114c3071,3074
<     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', 'right'))
---
>     cls.add_inplace_numeric_operator('+=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('*=', param('ns3::int64x64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('/=', param('ns3::int64x64_t const &', u'right'))
3175c3135
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3190c3150
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3203c3163
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3208c3168
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3218c3178
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3223c3183
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3568c3528
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3573c3533
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3578c3538
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
3704c3664
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3709c3669
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3714c3674
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3724c3684
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3729c3689
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3739c3699
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3748c3708
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3773c3733
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3778c3738
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3788c3748
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3793c3753
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3798c3758
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3803c3763
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
3858c3818
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3863c3823
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3876c3836
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3889c3849
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3902c3862
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3915c3875
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3982c3942
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3987c3947
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
3992c3952
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
4342,4350c4302,4307
<     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::int64x64_t'], root_module['ns3::Time'], param('ns3::Time const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', 'right'))
<     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::int64x64_t const &', 'right'))
<     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', 'right'))
<     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', 'right'))
---
>     cls.add_binary_numeric_operator('+', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('-', root_module['ns3::Time'], root_module['ns3::Time'], param('ns3::Time const &', u'right'))
>     cls.add_binary_numeric_operator('*', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_binary_numeric_operator('/', root_module['ns3::Time'], root_module['ns3::Time'], param('int64_t const &', u'right'))
>     cls.add_inplace_numeric_operator('+=', param('ns3::Time const &', u'right'))
>     cls.add_inplace_numeric_operator('-=', param('ns3::Time const &', u'right'))
4545c4502
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4550c4507
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4555c4512
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4560c4517
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4573c4530
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4583c4540
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4593c4550
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4598c4555
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4610c4567
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4615c4572
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4620c4577
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4625c4582
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4637c4594
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4642c4599
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4647c4604
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4657c4614
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4662c4619
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4667c4624
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4679c4636
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4684c4641
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
4689c4646
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4708c4665
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4713c4670
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
4723c4680
<                    is_static=True, template_parameters=['ns3::ObjectBase*'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::ObjectBase*'])
4728c4685
<                    is_static=True, template_parameters=['void'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'void'])
4733c4690
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::NetDevice> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::NetDevice> '])
4738c4695
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Packet const> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Packet const> '])
4743c4700
<                    is_static=True, template_parameters=['unsigned short'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned short'])
4748c4705
<                    is_static=True, template_parameters=['ns3::Address const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Address const&'])
4753c4710
<                    is_static=True, template_parameters=['ns3::NetDevice::PacketType'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::NetDevice::PacketType'])
4758c4715
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Socket> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Socket> '])
4763c4720
<                    is_static=True, template_parameters=['bool'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'bool'])
4768c4725
<                    is_static=True, template_parameters=['unsigned int'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'unsigned int'])
4773c4730
<                    is_static=True, template_parameters=['ns3::Ipv4Header const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv4Header const&'])
4778c4735
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Ipv4> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Ipv4> '])
4783c4740
<                    is_static=True, template_parameters=['ns3::Ipv4L3Protocol::DropReason'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv4L3Protocol::DropReason'])
4788c4745
<                    is_static=True, template_parameters=['ns3::Ptr<ns3::Ipv6> '], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ptr<ns3::Ipv6> '])
4793c4750
<                    is_static=True, template_parameters=['ns3::Ipv6Header const&'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv6Header const&'])
4798c4755
<                    is_static=True, template_parameters=['ns3::Ipv6L3Protocol::DropReason'], visibility='protected')
---
>                    is_static=True, visibility='protected', template_parameters=[u'ns3::Ipv6L3Protocol::DropReason'])
4902c4859
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
4907c4864
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
4912c4869
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
4936c4893
<                    is_virtual=True, is_pure_virtual=True, visibility='protected')
---
>                    is_pure_virtual=True, visibility='protected', is_virtual=True)
4946c4903
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5048c5005
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5053c5010
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5132c5089
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5161c5118
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5166c5123
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5171c5128
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5176c5133
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5181c5138
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5186c5143
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5191c5148
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5196c5153
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5201c5158
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5206c5163
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5211c5168
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5216c5173
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5221c5178
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5226c5183
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5231c5188
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5236c5193
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5246c5203
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5251c5208
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5256c5213
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5261c5218
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5266c5223
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5271c5228
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5276c5233
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5281c5238
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5286c5243
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5291c5248
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5296c5253
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5301c5258
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5306c5263
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5311c5268
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5316c5273
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5321c5278
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5326c5283
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5331c5288
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5338c5295
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
5343c5300
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
5348c5305
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
5353c5310
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
5448c5405
<                    custom_name='__call__')
---
>                    custom_name=u'__call__')
5463c5420
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5672c5629
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5677c5634
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
5682c5639
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
5687c5644
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
5692c5649
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5697c5654
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
5845c5802
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5850c5807
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5855c5812
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5860c5817
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5865c5822
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5870c5827
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5875c5832
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5880c5837
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5892c5849
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5897c5854
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5902c5859
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5907c5864
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5912c5869
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5917c5874
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5922c5879
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5927c5884
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5932c5889
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5937c5894
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5942c5899
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5947c5904
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5952c5909
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5957c5914
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5967c5924
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5972c5929
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5977c5934
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5982c5939
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
5987c5944
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5992c5949
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
5997c5954
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6002c5959
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6007c5964
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6012c5969
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6017c5974
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6022c5979
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6027c5984
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6032c5989
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6037c5994
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6042c5999
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6047c6004
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6052c6009
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6059c6016
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
6064c6021
<                    is_const=True, is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, is_const=True, visibility='private', is_virtual=True)
6069c6026
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
6074c6031
<                    is_virtual=True, is_pure_virtual=True, visibility='private')
---
>                    is_pure_virtual=True, visibility='private', is_virtual=True)
6169c6126
<                    custom_name='__call__')
---
>                    custom_name=u'__call__')
6184c6141
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6434c6391
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6439c6396
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6444c6401
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6449c6406
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6454c6411
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6459c6416
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6464c6421
<                    is_virtual=True, visibility='private')
---
>                    visibility='private', is_virtual=True)
6469c6426
<                    is_const=True, is_virtual=True, visibility='private')
---
>                    is_const=True, visibility='private', is_virtual=True)
6595c6552
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6600c6557
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6605c6562
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6610c6567
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6615c6572
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6620c6577
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6625c6582
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6630c6587
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6635c6592
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6645c6602
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6650c6607
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6655c6612
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6660c6617
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6665c6622
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6670c6627
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6675c6632
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6680c6637
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6685c6642
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6690c6647
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6695c6652
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6700c6657
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6705c6662
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6710c6667
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
6715c6672
<                    is_const=True, is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_const=True, is_virtual=True)
6842c6799
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6847c6804
<                    is_virtual=True, visibility='protected')
---
>                    visibility='protected', is_virtual=True)
6924,6928d6880
<     ## packet.h (module 'network'): void ns3::Packet::AddByteTag(ns3::Tag const & tag, uint32_t start, uint32_t end) const [member function]
<     cls.add_method('AddByteTag', 
<                    'void', 
<                    [param('ns3::Tag const &', 'tag'), param('uint32_t', 'start'), param('uint32_t', 'end')], 
<                    is_const=True)
7260c7212
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7282c7234
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7304c7256
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7326c7278
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7348c7300
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7370c7322
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7392c7344
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7414c7366
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7436c7388
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7458c7410
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7480c7432
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7502c7454
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7524c7476
<                    custom_name='__call__', is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True, custom_name=u'__call__')
7562c7514
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7572c7524
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7589c7541
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
7599c7551
<                    is_virtual=True, is_pure_virtual=True)
---
>                    is_pure_virtual=True, is_virtual=True)
